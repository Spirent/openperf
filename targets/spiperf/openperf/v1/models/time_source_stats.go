// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TimeSourceStats time source statistics
// swagger:model TimeSourceStats
type TimeSourceStats struct {

	// ntp
	Ntp *TimeSourceStatsNtp `json:"ntp,omitempty"`
}

// Validate validates this time source stats
func (m *TimeSourceStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNtp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeSourceStats) validateNtp(formats strfmt.Registry) error {

	if swag.IsZero(m.Ntp) { // not required
		return nil
	}

	if m.Ntp != nil {
		if err := m.Ntp.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ntp")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimeSourceStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeSourceStats) UnmarshalBinary(b []byte) error {
	var res TimeSourceStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TimeSourceStatsNtp NTP statistics
// swagger:model TimeSourceStatsNtp
type TimeSourceStatsNtp struct {

	// Received packets
	// Required: true
	RxPackets *int64 `json:"rx_packets"`

	// Time source distance from a NTP reference clock, in network hops.
	//
	Stratum int32 `json:"stratum,omitempty"`

	// Transmitted packets
	// Required: true
	TxPackets *int64 `json:"tx_packets"`
}

// Validate validates this time source stats ntp
func (m *TimeSourceStatsNtp) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRxPackets(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxPackets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TimeSourceStatsNtp) validateRxPackets(formats strfmt.Registry) error {

	if err := validate.Required("ntp"+"."+"rx_packets", "body", m.RxPackets); err != nil {
		return err
	}

	return nil
}

func (m *TimeSourceStatsNtp) validateTxPackets(formats strfmt.Registry) error {

	if err := validate.Required("ntp"+"."+"tx_packets", "body", m.TxPackets); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TimeSourceStatsNtp) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TimeSourceStatsNtp) UnmarshalBinary(b []byte) error {
	var res TimeSourceStatsNtp
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
