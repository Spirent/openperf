// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PortStats Port statistics
// swagger:model PortStats
type PortStats struct {

	// Received bytes
	// Required: true
	RxBytes *int64 `json:"rx_bytes"`

	// Receive-side errors
	// Required: true
	RxErrors *int64 `json:"rx_errors"`

	// Received packets
	// Required: true
	RxPackets *int64 `json:"rx_packets"`

	// Transmitted bytes
	// Required: true
	TxBytes *int64 `json:"tx_bytes"`

	// Transmit-side errors
	// Required: true
	TxErrors *int64 `json:"tx_errors"`

	// Transmitted packets
	// Required: true
	TxPackets *int64 `json:"tx_packets"`
}

// Validate validates this port stats
func (m *PortStats) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRxBytes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRxErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRxPackets(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxBytes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxErrors(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTxPackets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PortStats) validateRxBytes(formats strfmt.Registry) error {

	if err := validate.Required("rx_bytes", "body", m.RxBytes); err != nil {
		return err
	}

	return nil
}

func (m *PortStats) validateRxErrors(formats strfmt.Registry) error {

	if err := validate.Required("rx_errors", "body", m.RxErrors); err != nil {
		return err
	}

	return nil
}

func (m *PortStats) validateRxPackets(formats strfmt.Registry) error {

	if err := validate.Required("rx_packets", "body", m.RxPackets); err != nil {
		return err
	}

	return nil
}

func (m *PortStats) validateTxBytes(formats strfmt.Registry) error {

	if err := validate.Required("tx_bytes", "body", m.TxBytes); err != nil {
		return err
	}

	return nil
}

func (m *PortStats) validateTxErrors(formats strfmt.Registry) error {

	if err := validate.Required("tx_errors", "body", m.TxErrors); err != nil {
		return err
	}

	return nil
}

func (m *PortStats) validateTxPackets(formats strfmt.Registry) error {

	if err := validate.Required("tx_packets", "body", m.TxPackets); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PortStats) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PortStats) UnmarshalBinary(b []byte) error {
	var res PortStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
