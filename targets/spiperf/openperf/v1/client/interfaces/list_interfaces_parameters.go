// Code generated by go-swagger; DO NOT EDIT.

package interfaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListInterfacesParams creates a new ListInterfacesParams object
// with the default values initialized.
func NewListInterfacesParams() *ListInterfacesParams {
	var ()
	return &ListInterfacesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListInterfacesParamsWithTimeout creates a new ListInterfacesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListInterfacesParamsWithTimeout(timeout time.Duration) *ListInterfacesParams {
	var ()
	return &ListInterfacesParams{

		timeout: timeout,
	}
}

// NewListInterfacesParamsWithContext creates a new ListInterfacesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListInterfacesParamsWithContext(ctx context.Context) *ListInterfacesParams {
	var ()
	return &ListInterfacesParams{

		Context: ctx,
	}
}

// NewListInterfacesParamsWithHTTPClient creates a new ListInterfacesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListInterfacesParamsWithHTTPClient(client *http.Client) *ListInterfacesParams {
	var ()
	return &ListInterfacesParams{
		HTTPClient: client,
	}
}

/*ListInterfacesParams contains all the parameters to send to the API endpoint
for the list interfaces operation typically these are written to a http.Request
*/
type ListInterfacesParams struct {

	/*EthMacAddress
	  Filter by Ethernet MAC address

	*/
	EthMacAddress *string
	/*IPV4Address
	  Filter by IPv4 address

	*/
	IPV4Address *string
	/*PortID
	  Filter by port id

	*/
	PortID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list interfaces params
func (o *ListInterfacesParams) WithTimeout(timeout time.Duration) *ListInterfacesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list interfaces params
func (o *ListInterfacesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list interfaces params
func (o *ListInterfacesParams) WithContext(ctx context.Context) *ListInterfacesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list interfaces params
func (o *ListInterfacesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list interfaces params
func (o *ListInterfacesParams) WithHTTPClient(client *http.Client) *ListInterfacesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list interfaces params
func (o *ListInterfacesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEthMacAddress adds the ethMacAddress to the list interfaces params
func (o *ListInterfacesParams) WithEthMacAddress(ethMacAddress *string) *ListInterfacesParams {
	o.SetEthMacAddress(ethMacAddress)
	return o
}

// SetEthMacAddress adds the ethMacAddress to the list interfaces params
func (o *ListInterfacesParams) SetEthMacAddress(ethMacAddress *string) {
	o.EthMacAddress = ethMacAddress
}

// WithIPV4Address adds the iPV4Address to the list interfaces params
func (o *ListInterfacesParams) WithIPV4Address(iPV4Address *string) *ListInterfacesParams {
	o.SetIPV4Address(iPV4Address)
	return o
}

// SetIPV4Address adds the ipv4Address to the list interfaces params
func (o *ListInterfacesParams) SetIPV4Address(iPV4Address *string) {
	o.IPV4Address = iPV4Address
}

// WithPortID adds the portID to the list interfaces params
func (o *ListInterfacesParams) WithPortID(portID *string) *ListInterfacesParams {
	o.SetPortID(portID)
	return o
}

// SetPortID adds the portId to the list interfaces params
func (o *ListInterfacesParams) SetPortID(portID *string) {
	o.PortID = portID
}

// WriteToRequest writes these params to a swagger request
func (o *ListInterfacesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EthMacAddress != nil {

		// query param eth_mac_address
		var qrEthMacAddress string
		if o.EthMacAddress != nil {
			qrEthMacAddress = *o.EthMacAddress
		}
		qEthMacAddress := qrEthMacAddress
		if qEthMacAddress != "" {
			if err := r.SetQueryParam("eth_mac_address", qEthMacAddress); err != nil {
				return err
			}
		}

	}

	if o.IPV4Address != nil {

		// query param ipv4_address
		var qrIPV4Address string
		if o.IPV4Address != nil {
			qrIPV4Address = *o.IPV4Address
		}
		qIPV4Address := qrIPV4Address
		if qIPV4Address != "" {
			if err := r.SetQueryParam("ipv4_address", qIPV4Address); err != nil {
				return err
			}
		}

	}

	if o.PortID != nil {

		// query param port_id
		var qrPortID string
		if o.PortID != nil {
			qrPortID = *o.PortID
		}
		qPortID := qrPortID
		if qPortID != "" {
			if err := r.SetQueryParam("port_id", qPortID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
