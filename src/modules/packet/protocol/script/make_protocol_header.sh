#!/bin/bash

set -xe

HEADER_NAME='protocols.hpp'

function make_header() {
    INPUT_DIR=$1
    OUTPUT_FILE=$1/${HEADER_NAME}
    PREFIX=$2

    mkdir -p $(dirname ${OUTPUT_FILE})
    rm -f ${OUTPUT_FILE}

    cat <<EOF > ${OUTPUT_FILE}
#ifndef _OP_PACKET_PROTOCOL_TRANSMOGRIFY_PROTOCOLS_HPP_
#define _OP_PACKET_PROTOCOL_TRANSMOGRIFY_PROTOCOLS_HPP_

/**
 * This file is automatically generated. Do not edit!
 **/

EOF

    HEADERS=$(find ${INPUT_DIR} -name '*.hpp' ! -name "${HEADER_NAME}" | sort -)

    for header in ${HEADERS}; do
        if [ -z ${PREFIX} ]; then
            echo "#include \"${header}\"" >> ${OUTPUT_FILE}
        else
            echo "#include \"${PREFIX}/$(dirname ${header}/$(basename ${header}))\"" >> ${OUTPUT_FILE}
        fi
    done

    cat <<EOF >> ${OUTPUT_FILE}

#endif /* _OP_PACKET_PROTOCOL_TRANSMOGRIFY_PROTOCOLS_HPP_ */
EOF

}

function usage() {
    cat <<EOF
Usage: $0

This script generate a single header that includes all headers found
in the specified directory.

Options:
  -d | --dir : the protocol directory
  -p | --prefix : optional include prefix
EOF
}

OPTS=$(getopt -o hd:p: --longoptions help,dir:,prefix: -n 'make_protocol_header.sh' -- "$@")

if [ $? != 0 ]; then
    echo "Exiting..." >&2
    exit 1
fi

eval set -- "$OPTS"

DIR=
PREFIX=

while true; do
    case "$1" in
        -d | --dir)
            DIR="$2"
            shift 2
            ;;
        -p | --prefix)
            PREFIX="$2"
            shift 2
            ;;
        --)
            shift;
            break;
            ;;
        *)
            usage
            exit 1
            ;;
    esac
done

if [ -z ${DIR} ]; then
    DIR=$(cwd)
fi

make_header ${DIR} ${PREFIX}
