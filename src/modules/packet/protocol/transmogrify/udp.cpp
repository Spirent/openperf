/**
 * swagger <-> libpacket transmogrify implementation for udp
 *
 * This file is automatically generated by the transmogrify code generator.
 * Do not edit this file manually.
 **/

#include "udp.hpp"

namespace openperf::packet::protocol::transmogrify {

std::shared_ptr<swagger::v1::model::PacketProtocolUdp> to_swagger(libpacket::protocol::udp& src)
{
    auto dst = std::make_shared<swagger::v1::model::PacketProtocolUdp>();

    dst->setSource(get_udp_source(src));
    dst->setDestination(get_udp_destination(src));
    dst->setLength(get_udp_length(src));
    dst->setChecksum(get_udp_checksum(src));

    return (dst);
}

libpacket::protocol::udp to_protocol(const std::shared_ptr<swagger::v1::model::PacketProtocolUdp>& src)
{
    auto dst = libpacket::protocol::udp{};

    if (src) {
        if (src->sourceIsSet())
        {
            set_udp_source(dst, src->getSource());
        }
        if (src->destinationIsSet())
        {
            set_udp_destination(dst, src->getDestination());
        }
        if (src->lengthIsSet())
        {
            set_udp_length(dst, src->getLength());
        }
        if (src->checksumIsSet())
        {
            set_udp_checksum(dst, src->getChecksum());
        }
    }

    return (dst);
}

}
