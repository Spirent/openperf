/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "ModuleVersion.h"

namespace swagger {
namespace v1 {
namespace model {

ModuleVersion::ModuleVersion()
{
    m_Version = 0;
    m_VersionIsSet = false;
    m_Build_number = "";
    m_Build_numberIsSet = false;
    m_Build_date = "";
    m_Build_dateIsSet = false;
    m_Source_commit = "";
    m_Source_commitIsSet = false;
    
}

ModuleVersion::~ModuleVersion()
{
}

void ModuleVersion::validate()
{
    // TODO: implement validation
}

nlohmann::json ModuleVersion::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_VersionIsSet)
    {
        val["version"] = m_Version;
    }
    if(m_Build_numberIsSet)
    {
        val["build_number"] = ModelBase::toJson(m_Build_number);
    }
    if(m_Build_dateIsSet)
    {
        val["build_date"] = ModelBase::toJson(m_Build_date);
    }
    if(m_Source_commitIsSet)
    {
        val["source_commit"] = ModelBase::toJson(m_Source_commit);
    }
    

    return val;
}

void ModuleVersion::fromJson(nlohmann::json& val)
{
    if(val.find("version") != val.end())
    {
        setVersion(val.at("version"));
    }
    if(val.find("build_number") != val.end())
    {
        setBuildNumber(val.at("build_number"));
        
    }
    if(val.find("build_date") != val.end())
    {
        setBuildDate(val.at("build_date"));
        
    }
    if(val.find("source_commit") != val.end())
    {
        setSourceCommit(val.at("source_commit"));
        
    }
    
}


int32_t ModuleVersion::getVersion() const
{
    return m_Version;
}
void ModuleVersion::setVersion(int32_t value)
{
    m_Version = value;
    m_VersionIsSet = true;
}
bool ModuleVersion::versionIsSet() const
{
    return m_VersionIsSet;
}
void ModuleVersion::unsetVersion()
{
    m_VersionIsSet = false;
}
std::string ModuleVersion::getBuildNumber() const
{
    return m_Build_number;
}
void ModuleVersion::setBuildNumber(std::string value)
{
    m_Build_number = value;
    m_Build_numberIsSet = true;
}
bool ModuleVersion::buildNumberIsSet() const
{
    return m_Build_numberIsSet;
}
void ModuleVersion::unsetBuild_number()
{
    m_Build_numberIsSet = false;
}
std::string ModuleVersion::getBuildDate() const
{
    return m_Build_date;
}
void ModuleVersion::setBuildDate(std::string value)
{
    m_Build_date = value;
    m_Build_dateIsSet = true;
}
bool ModuleVersion::buildDateIsSet() const
{
    return m_Build_dateIsSet;
}
void ModuleVersion::unsetBuild_date()
{
    m_Build_dateIsSet = false;
}
std::string ModuleVersion::getSourceCommit() const
{
    return m_Source_commit;
}
void ModuleVersion::setSourceCommit(std::string value)
{
    m_Source_commit = value;
    m_Source_commitIsSet = true;
}
bool ModuleVersion::sourceCommitIsSet() const
{
    return m_Source_commitIsSet;
}
void ModuleVersion::unsetSource_commit()
{
    m_Source_commitIsSet = false;
}

}
}
}

