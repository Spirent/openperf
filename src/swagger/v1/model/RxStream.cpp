/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "RxStream.h"

namespace swagger {
namespace v1 {
namespace model {

RxStream::RxStream()
{
    m_Id = "";
    m_Analyzer_result_id = "";
    
}

RxStream::~RxStream()
{
}

void RxStream::validate()
{
    // TODO: implement validation
}

nlohmann::json RxStream::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["id"] = ModelBase::toJson(m_Id);
    val["analyzer_result_id"] = ModelBase::toJson(m_Analyzer_result_id);
    val["counters"] = ModelBase::toJson(m_Counters);
    

    return val;
}

void RxStream::fromJson(nlohmann::json& val)
{
    setId(val.at("id"));
    setAnalyzerResultId(val.at("analyzer_result_id"));
    
}


std::string RxStream::getId() const
{
    return m_Id;
}
void RxStream::setId(std::string value)
{
    m_Id = value;
    
}
std::string RxStream::getAnalyzerResultId() const
{
    return m_Analyzer_result_id;
}
void RxStream::setAnalyzerResultId(std::string value)
{
    m_Analyzer_result_id = value;
    
}
std::shared_ptr<AnalyzerStreamCounters> RxStream::getCounters() const
{
    return m_Counters;
}
void RxStream::setCounters(std::shared_ptr<AnalyzerStreamCounters> value)
{
    m_Counters = value;
    
}

}
}
}

