/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * BlockDevice.h
 *
 * Block device
 */

#ifndef BlockDevice_H_
#define BlockDevice_H_


#include "ModelBase.h"

#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Block device
/// </summary>
class  BlockDevice
    : public ModelBase
{
public:
    BlockDevice();
    virtual ~BlockDevice();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// BlockDevice members

    /// <summary>
    /// Unique device identifier
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
        /// <summary>
    /// Resource pathname
    /// </summary>
    std::string getPath() const;
    void setPath(std::string value);
        /// <summary>
    /// Resource size (in bytes)
    /// </summary>
    int64_t getSize() const;
    void setSize(int64_t value);
        /// <summary>
    /// Any info related to the current block device
    /// </summary>
    std::string getInfo() const;
    void setInfo(std::string value);
        /// <summary>
    /// Indicates whether it is safe to use this device for block I/O load generation
    /// </summary>
    bool isUsable() const;
    void setUsable(bool value);
    
protected:
    std::string m_Id;

    std::string m_Path;

    int64_t m_Size;

    std::string m_Info;

    bool m_Usable;

};

}
}
}

#endif /* BlockDevice_H_ */
