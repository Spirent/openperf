/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "BlockFile.h"

namespace swagger {
namespace v1 {
namespace model {

BlockFile::BlockFile()
{
    m_Id = "";
    m_IdIsSet = false;
    m_File_size = 0L;
    m_Init_percent_complete = 0;
    m_Init_percent_completeIsSet = false;
    m_Path = "";
    m_State = "";
    m_StateIsSet = false;
    
}

BlockFile::~BlockFile()
{
}

void BlockFile::validate()
{
    // TODO: implement validation
}

nlohmann::json BlockFile::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_IdIsSet)
    {
        val["id"] = ModelBase::toJson(m_Id);
    }
    val["file_size"] = m_File_size;
    if(m_Init_percent_completeIsSet)
    {
        val["init_percent_complete"] = m_Init_percent_complete;
    }
    val["path"] = ModelBase::toJson(m_Path);
    if(m_StateIsSet)
    {
        val["state"] = ModelBase::toJson(m_State);
    }
    

    return val;
}

void BlockFile::fromJson(nlohmann::json& val)
{
    if(val.find("id") != val.end())
    {
        setId(val.at("id"));
        
    }
    setFileSize(val.at("file_size"));
    if(val.find("init_percent_complete") != val.end())
    {
        setInitPercentComplete(val.at("init_percent_complete"));
    }
    setPath(val.at("path"));
    if(val.find("state") != val.end())
    {
        setState(val.at("state"));
        
    }
    
}


std::string BlockFile::getId() const
{
    return m_Id;
}
void BlockFile::setId(std::string value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool BlockFile::idIsSet() const
{
    return m_IdIsSet;
}
void BlockFile::unsetId()
{
    m_IdIsSet = false;
}
int64_t BlockFile::getFileSize() const
{
    return m_File_size;
}
void BlockFile::setFileSize(int64_t value)
{
    m_File_size = value;
    
}
int32_t BlockFile::getInitPercentComplete() const
{
    return m_Init_percent_complete;
}
void BlockFile::setInitPercentComplete(int32_t value)
{
    m_Init_percent_complete = value;
    m_Init_percent_completeIsSet = true;
}
bool BlockFile::initPercentCompleteIsSet() const
{
    return m_Init_percent_completeIsSet;
}
void BlockFile::unsetInit_percent_complete()
{
    m_Init_percent_completeIsSet = false;
}
std::string BlockFile::getPath() const
{
    return m_Path;
}
void BlockFile::setPath(std::string value)
{
    m_Path = value;
    
}
std::string BlockFile::getState() const
{
    return m_State;
}
void BlockFile::setState(std::string value)
{
    m_State = value;
    m_StateIsSet = true;
}
bool BlockFile::stateIsSet() const
{
    return m_StateIsSet;
}
void BlockFile::unsetState()
{
    m_StateIsSet = false;
}

}
}
}

