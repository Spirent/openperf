/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "SpirentSignature_fill.h"

namespace swagger {
namespace v1 {
namespace model {

SpirentSignature_fill::SpirentSignature_fill()
{
    m_Constant = 0;
    m_ConstantIsSet = false;
    m_Decrement = 0;
    m_DecrementIsSet = false;
    m_Increment = 0;
    m_IncrementIsSet = false;
    m_Prbs = false;
    m_PrbsIsSet = false;
    
}

SpirentSignature_fill::~SpirentSignature_fill()
{
}

void SpirentSignature_fill::validate()
{
    // TODO: implement validation
}

nlohmann::json SpirentSignature_fill::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_ConstantIsSet)
    {
        val["constant"] = m_Constant;
    }
    if(m_DecrementIsSet)
    {
        val["decrement"] = m_Decrement;
    }
    if(m_IncrementIsSet)
    {
        val["increment"] = m_Increment;
    }
    if(m_PrbsIsSet)
    {
        val["prbs"] = m_Prbs;
    }
    

    return val;
}

void SpirentSignature_fill::fromJson(nlohmann::json& val)
{
    if(val.find("constant") != val.end())
    {
        setConstant(val.at("constant"));
    }
    if(val.find("decrement") != val.end())
    {
        setDecrement(val.at("decrement"));
    }
    if(val.find("increment") != val.end())
    {
        setIncrement(val.at("increment"));
    }
    if(val.find("prbs") != val.end())
    {
        setPrbs(val.at("prbs"));
    }
    
}


int32_t SpirentSignature_fill::getConstant() const
{
    return m_Constant;
}
void SpirentSignature_fill::setConstant(int32_t value)
{
    m_Constant = value;
    m_ConstantIsSet = true;
}
bool SpirentSignature_fill::constantIsSet() const
{
    return m_ConstantIsSet;
}
void SpirentSignature_fill::unsetConstant()
{
    m_ConstantIsSet = false;
}
int32_t SpirentSignature_fill::getDecrement() const
{
    return m_Decrement;
}
void SpirentSignature_fill::setDecrement(int32_t value)
{
    m_Decrement = value;
    m_DecrementIsSet = true;
}
bool SpirentSignature_fill::decrementIsSet() const
{
    return m_DecrementIsSet;
}
void SpirentSignature_fill::unsetDecrement()
{
    m_DecrementIsSet = false;
}
int32_t SpirentSignature_fill::getIncrement() const
{
    return m_Increment;
}
void SpirentSignature_fill::setIncrement(int32_t value)
{
    m_Increment = value;
    m_IncrementIsSet = true;
}
bool SpirentSignature_fill::incrementIsSet() const
{
    return m_IncrementIsSet;
}
void SpirentSignature_fill::unsetIncrement()
{
    m_IncrementIsSet = false;
}
bool SpirentSignature_fill::isPrbs() const
{
    return m_Prbs;
}
void SpirentSignature_fill::setPrbs(bool value)
{
    m_Prbs = value;
    m_PrbsIsSet = true;
}
bool SpirentSignature_fill::prbsIsSet() const
{
    return m_PrbsIsSet;
}
void SpirentSignature_fill::unsetPrbs()
{
    m_PrbsIsSet = false;
}

}
}
}

