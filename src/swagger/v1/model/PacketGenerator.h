/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PacketGenerator.h
 *
 * Packet generator
 */

#ifndef PacketGenerator_H_
#define PacketGenerator_H_


#include "ModelBase.h"

#include "PacketGeneratorConfig.h"
#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Packet generator
/// </summary>
class  PacketGenerator
    : public ModelBase
{
public:
    PacketGenerator();
    virtual ~PacketGenerator();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PacketGenerator members

    /// <summary>
    /// Unique generator identifier
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
        /// <summary>
    /// Specifies the unique target for packets from this generator. This id may refer to either a port or an interface id. 
    /// </summary>
    std::string getTargetId() const;
    void setTargetId(std::string value);
        /// <summary>
    /// Indicates whether this object is currently generating packets or not. 
    /// </summary>
    bool isActive() const;
    void setActive(bool value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PacketGeneratorConfig> getConfig() const;
    void setConfig(std::shared_ptr<PacketGeneratorConfig> value);
    
protected:
    std::string m_Id;

    std::string m_Target_id;

    bool m_Active;

    std::shared_ptr<PacketGeneratorConfig> m_Config;

};

}
}
}

#endif /* PacketGenerator_H_ */
