/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "TrafficDefinition.h"

namespace swagger {
namespace v1 {
namespace model {

TrafficDefinition::TrafficDefinition()
{
    m_SignatureIsSet = false;
    m_Weight = 0;
    m_WeightIsSet = false;
    
}

TrafficDefinition::~TrafficDefinition()
{
}

void TrafficDefinition::validate()
{
    // TODO: implement validation
}

nlohmann::json TrafficDefinition::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["packet"] = ModelBase::toJson(m_Packet);
    val["length"] = ModelBase::toJson(m_Length);
    if(m_SignatureIsSet)
    {
        val["signature"] = ModelBase::toJson(m_Signature);
    }
    if(m_WeightIsSet)
    {
        val["weight"] = m_Weight;
    }
    

    return val;
}

void TrafficDefinition::fromJson(nlohmann::json& val)
{
    if(val.find("signature") != val.end())
    {
        if(!val["signature"].is_null())
        {
            std::shared_ptr<SpirentSignature> newItem(new SpirentSignature());
            newItem->fromJson(val["signature"]);
            setSignature( newItem );
        }
        
    }
    if(val.find("weight") != val.end())
    {
        setWeight(val.at("weight"));
    }
    
}


std::shared_ptr<TrafficPacketTemplate> TrafficDefinition::getPacket() const
{
    return m_Packet;
}
void TrafficDefinition::setPacket(std::shared_ptr<TrafficPacketTemplate> value)
{
    m_Packet = value;
    
}
std::shared_ptr<TrafficLength> TrafficDefinition::getLength() const
{
    return m_Length;
}
void TrafficDefinition::setLength(std::shared_ptr<TrafficLength> value)
{
    m_Length = value;
    
}
std::shared_ptr<SpirentSignature> TrafficDefinition::getSignature() const
{
    return m_Signature;
}
void TrafficDefinition::setSignature(std::shared_ptr<SpirentSignature> value)
{
    m_Signature = value;
    m_SignatureIsSet = true;
}
bool TrafficDefinition::signatureIsSet() const
{
    return m_SignatureIsSet;
}
void TrafficDefinition::unsetSignature()
{
    m_SignatureIsSet = false;
}
int32_t TrafficDefinition::getWeight() const
{
    return m_Weight;
}
void TrafficDefinition::setWeight(int32_t value)
{
    m_Weight = value;
    m_WeightIsSet = true;
}
bool TrafficDefinition::weightIsSet() const
{
    return m_WeightIsSet;
}
void TrafficDefinition::unsetWeight()
{
    m_WeightIsSet = false;
}

}
}
}

