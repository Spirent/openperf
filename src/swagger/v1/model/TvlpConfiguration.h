/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * TvlpConfiguration.h
 *
 * TVLP configuration
 */

#ifndef TvlpConfiguration_H_
#define TvlpConfiguration_H_


#include "ModelBase.h"

#include "TvlpConfiguration_time.h"
#include <string>
#include "TvlpProfile.h"

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// TVLP configuration
/// </summary>
class  TvlpConfiguration
    : public ModelBase
{
public:
    TvlpConfiguration();
    virtual ~TvlpConfiguration();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// TvlpConfiguration members

    /// <summary>
    /// Unique TVLP configuration identifier
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
        /// <summary>
    /// TVLP configuration state - ready - TVLP contains a valid configuration and is ready to be started - countdown - TVLP has been given a start time in the future and is waiting to start replaying a profile - running - TVLP is replaying a profile - error - TVLP encountered a runtime error 
    /// </summary>
    std::string getState() const;
    void setState(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TvlpConfiguration_time> getTime() const;
    void setTime(std::shared_ptr<TvlpConfiguration_time> value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TvlpProfile> getProfile() const;
    void setProfile(std::shared_ptr<TvlpProfile> value);
        /// <summary>
    /// string describing error condition; only when state &#x3D;&#x3D; error
    /// </summary>
    std::string getError() const;
    void setError(std::string value);
    bool errorIsSet() const;
    void unsetError();

protected:
    std::string m_Id;

    std::string m_State;

    std::shared_ptr<TvlpConfiguration_time> m_Time;

    std::shared_ptr<TvlpProfile> m_Profile;

    std::string m_Error;
    bool m_ErrorIsSet;
};

}
}
}

#endif /* TvlpConfiguration_H_ */
