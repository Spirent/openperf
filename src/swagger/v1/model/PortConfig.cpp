/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "PortConfig.h"

namespace swagger {
namespace v1 {
namespace model {

PortConfig::PortConfig()
{
    m_DpdkIsSet = false;
    m_BondIsSet = false;
    
}

PortConfig::~PortConfig()
{
}

void PortConfig::validate()
{
    // TODO: implement validation
}

nlohmann::json PortConfig::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_DpdkIsSet)
    {
        val["dpdk"] = ModelBase::toJson(m_Dpdk);
    }
    if(m_BondIsSet)
    {
        val["bond"] = ModelBase::toJson(m_Bond);
    }
    

    return val;
}

void PortConfig::fromJson(nlohmann::json& val)
{
    if(val.find("dpdk") != val.end())
    {
        if(!val["dpdk"].is_null())
        {
            std::shared_ptr<PortConfig_dpdk> newItem(new PortConfig_dpdk());
            newItem->fromJson(val["dpdk"]);
            setDpdk( newItem );
        }
        
    }
    if(val.find("bond") != val.end())
    {
        if(!val["bond"].is_null())
        {
            std::shared_ptr<PortConfig_bond> newItem(new PortConfig_bond());
            newItem->fromJson(val["bond"]);
            setBond( newItem );
        }
        
    }
    
}


std::shared_ptr<PortConfig_dpdk> PortConfig::getDpdk() const
{
    return m_Dpdk;
}
void PortConfig::setDpdk(std::shared_ptr<PortConfig_dpdk> value)
{
    m_Dpdk = value;
    m_DpdkIsSet = true;
}
bool PortConfig::dpdkIsSet() const
{
    return m_DpdkIsSet;
}
void PortConfig::unsetDpdk()
{
    m_DpdkIsSet = false;
}
std::shared_ptr<PortConfig_bond> PortConfig::getBond() const
{
    return m_Bond;
}
void PortConfig::setBond(std::shared_ptr<PortConfig_bond> value)
{
    m_Bond = value;
    m_BondIsSet = true;
}
bool PortConfig::bondIsSet() const
{
    return m_BondIsSet;
}
void PortConfig::unsetBond()
{
    m_BondIsSet = false;
}

}
}
}

