/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "MemoryGeneratorStats.h"

namespace swagger {
namespace v1 {
namespace model {

MemoryGeneratorStats::MemoryGeneratorStats()
{
    m_Ops_target = 0L;
    m_Ops_actual = 0L;
    m_Bytes_target = 0L;
    m_Bytes_actual = 0L;
    m_Latency_total = 0L;
    
}

MemoryGeneratorStats::~MemoryGeneratorStats()
{
}

void MemoryGeneratorStats::validate()
{
    // TODO: implement validation
}

nlohmann::json MemoryGeneratorStats::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["ops_target"] = m_Ops_target;
    val["ops_actual"] = m_Ops_actual;
    val["bytes_target"] = m_Bytes_target;
    val["bytes_actual"] = m_Bytes_actual;
    val["latency_total"] = m_Latency_total;
    

    return val;
}

void MemoryGeneratorStats::fromJson(nlohmann::json& val)
{
    setOpsTarget(val.at("ops_target"));
    setOpsActual(val.at("ops_actual"));
    setBytesTarget(val.at("bytes_target"));
    setBytesActual(val.at("bytes_actual"));
    setLatencyTotal(val.at("latency_total"));
    
}


int64_t MemoryGeneratorStats::getOpsTarget() const
{
    return m_Ops_target;
}
void MemoryGeneratorStats::setOpsTarget(int64_t value)
{
    m_Ops_target = value;
    
}
int64_t MemoryGeneratorStats::getOpsActual() const
{
    return m_Ops_actual;
}
void MemoryGeneratorStats::setOpsActual(int64_t value)
{
    m_Ops_actual = value;
    
}
int64_t MemoryGeneratorStats::getBytesTarget() const
{
    return m_Bytes_target;
}
void MemoryGeneratorStats::setBytesTarget(int64_t value)
{
    m_Bytes_target = value;
    
}
int64_t MemoryGeneratorStats::getBytesActual() const
{
    return m_Bytes_actual;
}
void MemoryGeneratorStats::setBytesActual(int64_t value)
{
    m_Bytes_actual = value;
    
}
int64_t MemoryGeneratorStats::getLatencyTotal() const
{
    return m_Latency_total;
}
void MemoryGeneratorStats::setLatencyTotal(int64_t value)
{
    m_Latency_total = value;
    
}

}
}
}

