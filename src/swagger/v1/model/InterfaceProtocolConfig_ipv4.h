/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * InterfaceProtocolConfig_ipv4.h
 *
 * IPv4 protocol configuration
 */

#ifndef InterfaceProtocolConfig_ipv4_H_
#define InterfaceProtocolConfig_ipv4_H_


#include "ModelBase.h"

#include "InterfaceProtocolConfig_ipv4_dhcp.h"
#include "InterfaceProtocolConfig_ipv4_static.h"
#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// IPv4 protocol configuration
/// </summary>
class  InterfaceProtocolConfig_ipv4
    : public ModelBase
{
public:
    InterfaceProtocolConfig_ipv4();
    virtual ~InterfaceProtocolConfig_ipv4();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// InterfaceProtocolConfig_ipv4 members

    /// <summary>
    /// Configuration method
    /// </summary>
    std::string getMethod() const;
    void setMethod(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<InterfaceProtocolConfig_ipv4_static> getStatic() const;
    void setStatic(std::shared_ptr<InterfaceProtocolConfig_ipv4_static> value);
    bool staticIsSet() const;
    void unsetStatic();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<InterfaceProtocolConfig_ipv4_dhcp> getDhcp() const;
    void setDhcp(std::shared_ptr<InterfaceProtocolConfig_ipv4_dhcp> value);
    bool dhcpIsSet() const;
    void unsetDhcp();

protected:
    std::string m_Method;

    std::shared_ptr<InterfaceProtocolConfig_ipv4_static> m_Static;
    bool m_StaticIsSet;
    std::shared_ptr<InterfaceProtocolConfig_ipv4_dhcp> m_Dhcp;
    bool m_DhcpIsSet;
};

}
}
}

#endif /* InterfaceProtocolConfig_ipv4_H_ */
