/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PacketProtocolCustom.h
 *
 * Defines an arbitrary sequence of data
 */

#ifndef PacketProtocolCustom_H_
#define PacketProtocolCustom_H_


#include "ModelBase.h"

#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Defines an arbitrary sequence of data
/// </summary>
class  PacketProtocolCustom
    : public ModelBase
{
public:
    PacketProtocolCustom();
    virtual ~PacketProtocolCustom();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PacketProtocolCustom members

    /// <summary>
    /// Base64 encoded binary packet data
    /// </summary>
    std::string getData() const;
    void setData(std::string value);
        /// <summary>
    /// Indicates which protocol layer this protocol belongs to. 
    /// </summary>
    std::string getLayer() const;
    void setLayer(std::string value);
        /// <summary>
    /// Indicates the value to use for a preceding header that supports a next header type or protocol field. For example, if a custom protocol came immediately after an Ethernet header, then this value would be written to the Ethernet header\\&#39;s ether_type field. 
    /// </summary>
    int32_t getProtocolId() const;
    void setProtocolId(int32_t value);
    bool protocolIdIsSet() const;
    void unsetProtocol_id();

protected:
    std::string m_Data;

    std::string m_Layer;

    int32_t m_Protocol_id;
    bool m_Protocol_idIsSet;
};

}
}
}

#endif /* PacketProtocolCustom_H_ */
