/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Ipv6DynamicAddressStatus.h"

namespace swagger {
namespace v1 {
namespace model {

Ipv6DynamicAddressStatus::Ipv6DynamicAddressStatus()
{
    m_Address = "";
    m_AddressIsSet = false;
    m_Scope = 0;
    m_ScopeIsSet = false;
    m_State = "";
    m_StateIsSet = false;
    
}

Ipv6DynamicAddressStatus::~Ipv6DynamicAddressStatus()
{
}

void Ipv6DynamicAddressStatus::validate()
{
    // TODO: implement validation
}

nlohmann::json Ipv6DynamicAddressStatus::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_AddressIsSet)
    {
        val["address"] = ModelBase::toJson(m_Address);
    }
    if(m_ScopeIsSet)
    {
        val["scope"] = m_Scope;
    }
    if(m_StateIsSet)
    {
        val["state"] = ModelBase::toJson(m_State);
    }
    

    return val;
}

void Ipv6DynamicAddressStatus::fromJson(nlohmann::json& val)
{
    if(val.find("address") != val.end())
    {
        setAddress(val.at("address"));
        
    }
    if(val.find("scope") != val.end())
    {
        setScope(val.at("scope"));
    }
    if(val.find("state") != val.end())
    {
        setState(val.at("state"));
        
    }
    
}


std::string Ipv6DynamicAddressStatus::getAddress() const
{
    return m_Address;
}
void Ipv6DynamicAddressStatus::setAddress(std::string value)
{
    m_Address = value;
    m_AddressIsSet = true;
}
bool Ipv6DynamicAddressStatus::addressIsSet() const
{
    return m_AddressIsSet;
}
void Ipv6DynamicAddressStatus::unsetAddress()
{
    m_AddressIsSet = false;
}
int32_t Ipv6DynamicAddressStatus::getScope() const
{
    return m_Scope;
}
void Ipv6DynamicAddressStatus::setScope(int32_t value)
{
    m_Scope = value;
    m_ScopeIsSet = true;
}
bool Ipv6DynamicAddressStatus::scopeIsSet() const
{
    return m_ScopeIsSet;
}
void Ipv6DynamicAddressStatus::unsetScope()
{
    m_ScopeIsSet = false;
}
std::string Ipv6DynamicAddressStatus::getState() const
{
    return m_State;
}
void Ipv6DynamicAddressStatus::setState(std::string value)
{
    m_State = value;
    m_StateIsSet = true;
}
bool Ipv6DynamicAddressStatus::stateIsSet() const
{
    return m_StateIsSet;
}
void Ipv6DynamicAddressStatus::unsetState()
{
    m_StateIsSet = false;
}

}
}
}

