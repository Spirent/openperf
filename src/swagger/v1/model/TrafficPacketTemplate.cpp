/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "TrafficPacketTemplate.h"

namespace swagger {
namespace v1 {
namespace model {

TrafficPacketTemplate::TrafficPacketTemplate()
{
    m_Modifier_tie = "";
    m_Modifier_tieIsSet = false;
    
}

TrafficPacketTemplate::~TrafficPacketTemplate()
{
}

void TrafficPacketTemplate::validate()
{
    // TODO: implement validation
}

nlohmann::json TrafficPacketTemplate::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    {
        nlohmann::json jsonArray;
        for( auto& item : m_Protocols )
        {
            jsonArray.push_back(ModelBase::toJson(item));
        }
        val["protocols"] = jsonArray;
            }
    if(m_Modifier_tieIsSet)
    {
        val["modifier_tie"] = ModelBase::toJson(m_Modifier_tie);
    }
    

    return val;
}

void TrafficPacketTemplate::fromJson(nlohmann::json& val)
{
    {
        m_Protocols.clear();
        nlohmann::json jsonArray;
                for( auto& item : val["protocols"] )
        {
            
            if(item.is_null())
            {
                m_Protocols.push_back( std::shared_ptr<TrafficProtocol>(nullptr) );
            }
            else
            {
                std::shared_ptr<TrafficProtocol> newItem(new TrafficProtocol());
                newItem->fromJson(item);
                m_Protocols.push_back( newItem );
            }
            
        }
    }
    if(val.find("modifier_tie") != val.end())
    {
        setModifierTie(val.at("modifier_tie"));
        
    }
    
}


std::vector<std::shared_ptr<TrafficProtocol>>& TrafficPacketTemplate::getProtocols()
{
    return m_Protocols;
}
std::string TrafficPacketTemplate::getModifierTie() const
{
    return m_Modifier_tie;
}
void TrafficPacketTemplate::setModifierTie(std::string value)
{
    m_Modifier_tie = value;
    m_Modifier_tieIsSet = true;
}
bool TrafficPacketTemplate::modifierTieIsSet() const
{
    return m_Modifier_tieIsSet;
}
void TrafficPacketTemplate::unsetModifier_tie()
{
    m_Modifier_tieIsSet = false;
}

}
}
}

