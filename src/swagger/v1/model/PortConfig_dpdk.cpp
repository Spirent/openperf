/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "PortConfig_dpdk.h"

namespace swagger {
namespace v1 {
namespace model {

PortConfig_dpdk::PortConfig_dpdk()
{
    m_Device = "";
    m_DeviceIsSet = false;
    m_Driver = "";
    m_DriverIsSet = false;
    m_Interface = "";
    m_InterfaceIsSet = false;
    
}

PortConfig_dpdk::~PortConfig_dpdk()
{
}

void PortConfig_dpdk::validate()
{
    // TODO: implement validation
}

nlohmann::json PortConfig_dpdk::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_DeviceIsSet)
    {
        val["device"] = ModelBase::toJson(m_Device);
    }
    if(m_DriverIsSet)
    {
        val["driver"] = ModelBase::toJson(m_Driver);
    }
    if(m_InterfaceIsSet)
    {
        val["interface"] = ModelBase::toJson(m_Interface);
    }
    val["link"] = ModelBase::toJson(m_Link);
    

    return val;
}

void PortConfig_dpdk::fromJson(nlohmann::json& val)
{
    if(val.find("device") != val.end())
    {
        setDevice(val.at("device"));
        
    }
    if(val.find("driver") != val.end())
    {
        setDriver(val.at("driver"));
        
    }
    if(val.find("interface") != val.end())
    {
        setInterface(val.at("interface"));
        
    }
    
}


std::string PortConfig_dpdk::getDevice() const
{
    return m_Device;
}
void PortConfig_dpdk::setDevice(std::string value)
{
    m_Device = value;
    m_DeviceIsSet = true;
}
bool PortConfig_dpdk::deviceIsSet() const
{
    return m_DeviceIsSet;
}
void PortConfig_dpdk::unsetDevice()
{
    m_DeviceIsSet = false;
}
std::string PortConfig_dpdk::getDriver() const
{
    return m_Driver;
}
void PortConfig_dpdk::setDriver(std::string value)
{
    m_Driver = value;
    m_DriverIsSet = true;
}
bool PortConfig_dpdk::driverIsSet() const
{
    return m_DriverIsSet;
}
void PortConfig_dpdk::unsetDriver()
{
    m_DriverIsSet = false;
}
std::string PortConfig_dpdk::getInterface() const
{
    return m_Interface;
}
void PortConfig_dpdk::setInterface(std::string value)
{
    m_Interface = value;
    m_InterfaceIsSet = true;
}
bool PortConfig_dpdk::interfaceIsSet() const
{
    return m_InterfaceIsSet;
}
void PortConfig_dpdk::unsetInterface()
{
    m_InterfaceIsSet = false;
}
std::shared_ptr<PortConfig_dpdk_link> PortConfig_dpdk::getLink() const
{
    return m_Link;
}
void PortConfig_dpdk::setLink(std::shared_ptr<PortConfig_dpdk_link> value)
{
    m_Link = value;
    
}

}
}
}

