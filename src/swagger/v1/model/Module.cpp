/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "Module.h"

namespace swagger {
namespace v1 {
namespace model {

Module::Module()
{
    m_Id = "";
    m_IdIsSet = false;
    m_Description = "";
    m_DescriptionIsSet = false;
    m_Linkage = "";
    m_LinkageIsSet = false;
    m_Path = "";
    m_PathIsSet = false;
    
}

Module::~Module()
{
}

void Module::validate()
{
    // TODO: implement validation
}

nlohmann::json Module::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_IdIsSet)
    {
        val["id"] = ModelBase::toJson(m_Id);
    }
    if(m_DescriptionIsSet)
    {
        val["description"] = ModelBase::toJson(m_Description);
    }
    val["version"] = ModelBase::toJson(m_Version);
    if(m_LinkageIsSet)
    {
        val["linkage"] = ModelBase::toJson(m_Linkage);
    }
    if(m_PathIsSet)
    {
        val["path"] = ModelBase::toJson(m_Path);
    }
    

    return val;
}

void Module::fromJson(nlohmann::json& val)
{
    if(val.find("id") != val.end())
    {
        setId(val.at("id"));
        
    }
    if(val.find("description") != val.end())
    {
        setDescription(val.at("description"));
        
    }
    if(val.find("linkage") != val.end())
    {
        setLinkage(val.at("linkage"));
        
    }
    if(val.find("path") != val.end())
    {
        setPath(val.at("path"));
        
    }
    
}


std::string Module::getId() const
{
    return m_Id;
}
void Module::setId(std::string value)
{
    m_Id = value;
    m_IdIsSet = true;
}
bool Module::idIsSet() const
{
    return m_IdIsSet;
}
void Module::unsetId()
{
    m_IdIsSet = false;
}
std::string Module::getDescription() const
{
    return m_Description;
}
void Module::setDescription(std::string value)
{
    m_Description = value;
    m_DescriptionIsSet = true;
}
bool Module::descriptionIsSet() const
{
    return m_DescriptionIsSet;
}
void Module::unsetDescription()
{
    m_DescriptionIsSet = false;
}
std::shared_ptr<ModuleVersion> Module::getVersion() const
{
    return m_Version;
}
void Module::setVersion(std::shared_ptr<ModuleVersion> value)
{
    m_Version = value;
    
}
std::string Module::getLinkage() const
{
    return m_Linkage;
}
void Module::setLinkage(std::string value)
{
    m_Linkage = value;
    m_LinkageIsSet = true;
}
bool Module::linkageIsSet() const
{
    return m_LinkageIsSet;
}
void Module::unsetLinkage()
{
    m_LinkageIsSet = false;
}
std::string Module::getPath() const
{
    return m_Path;
}
void Module::setPath(std::string value)
{
    m_Path = value;
    m_PathIsSet = true;
}
bool Module::pathIsSet() const
{
    return m_PathIsSet;
}
void Module::unsetPath()
{
    m_PathIsSet = false;
}

}
}
}

