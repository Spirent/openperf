/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "PacketAnalyzerFlowCounters_errors.h"

namespace swagger {
namespace v1 {
namespace model {

PacketAnalyzerFlowCounters_errors::PacketAnalyzerFlowCounters_errors()
{
    m_Fcs = 0L;
    m_Ipv4_checksum = 0L;
    m_Tcp_checksum = 0L;
    m_Udp_checksum = 0L;
    
}

PacketAnalyzerFlowCounters_errors::~PacketAnalyzerFlowCounters_errors()
{
}

void PacketAnalyzerFlowCounters_errors::validate()
{
    // TODO: implement validation
}

nlohmann::json PacketAnalyzerFlowCounters_errors::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["fcs"] = m_Fcs;
    val["ipv4_checksum"] = m_Ipv4_checksum;
    val["tcp_checksum"] = m_Tcp_checksum;
    val["udp_checksum"] = m_Udp_checksum;
    

    return val;
}

void PacketAnalyzerFlowCounters_errors::fromJson(nlohmann::json& val)
{
    setFcs(val.at("fcs"));
    setIpv4Checksum(val.at("ipv4_checksum"));
    setTcpChecksum(val.at("tcp_checksum"));
    setUdpChecksum(val.at("udp_checksum"));
    
}


int64_t PacketAnalyzerFlowCounters_errors::getFcs() const
{
    return m_Fcs;
}
void PacketAnalyzerFlowCounters_errors::setFcs(int64_t value)
{
    m_Fcs = value;
    
}
int64_t PacketAnalyzerFlowCounters_errors::getIpv4Checksum() const
{
    return m_Ipv4_checksum;
}
void PacketAnalyzerFlowCounters_errors::setIpv4Checksum(int64_t value)
{
    m_Ipv4_checksum = value;
    
}
int64_t PacketAnalyzerFlowCounters_errors::getTcpChecksum() const
{
    return m_Tcp_checksum;
}
void PacketAnalyzerFlowCounters_errors::setTcpChecksum(int64_t value)
{
    m_Tcp_checksum = value;
    
}
int64_t PacketAnalyzerFlowCounters_errors::getUdpChecksum() const
{
    return m_Udp_checksum;
}
void PacketAnalyzerFlowCounters_errors::setUdpChecksum(int64_t value)
{
    m_Udp_checksum = value;
    
}

}
}
}

