/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * TrafficLength.h
 *
 * Specifies length of generated packets
 */

#ifndef TrafficLength_H_
#define TrafficLength_H_


#include "ModelBase.h"

#include "TrafficLength_sequence.h"
#include "TrafficLength_list.h"
#include <string>
#include "TrafficLength_fixed.h"

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Specifies length of generated packets
/// </summary>
class  TrafficLength
    : public ModelBase
{
public:
    TrafficLength();
    virtual ~TrafficLength();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// TrafficLength members

    /// <summary>
    /// packet length specification method
    /// </summary>
    std::string getMethod() const;
    void setMethod(std::string value);
    bool methodIsSet() const;
    void unsetMethod();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TrafficLength_fixed> getFixed() const;
    void setFixed(std::shared_ptr<TrafficLength_fixed> value);
    bool fixedIsSet() const;
    void unsetFixed();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TrafficLength_list> getList() const;
    void setList(std::shared_ptr<TrafficLength_list> value);
    bool listIsSet() const;
    void unsetList();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TrafficLength_sequence> getSequence() const;
    void setSequence(std::shared_ptr<TrafficLength_sequence> value);
    bool sequenceIsSet() const;
    void unsetSequence();

protected:
    std::string m_Method;
    bool m_MethodIsSet;
    std::shared_ptr<TrafficLength_fixed> m_Fixed;
    bool m_FixedIsSet;
    std::shared_ptr<TrafficLength_list> m_List;
    bool m_ListIsSet;
    std::shared_ptr<TrafficLength_sequence> m_Sequence;
    bool m_SequenceIsSet;
};

}
}
}

#endif /* TrafficLength_H_ */
