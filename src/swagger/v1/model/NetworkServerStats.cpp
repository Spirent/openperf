/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "NetworkServerStats.h"

namespace swagger {
namespace v1 {
namespace model {

NetworkServerStats::NetworkServerStats()
{
    m_Bytes_sent = 0L;
    m_Bytes_received = 0L;
    m_Connections = 0L;
    m_Closed = 0L;
    m_Errors = 0L;
    
}

NetworkServerStats::~NetworkServerStats()
{
}

void NetworkServerStats::validate()
{
    // TODO: implement validation
}

nlohmann::json NetworkServerStats::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["bytes_sent"] = m_Bytes_sent;
    val["bytes_received"] = m_Bytes_received;
    val["connections"] = m_Connections;
    val["closed"] = m_Closed;
    val["errors"] = m_Errors;
    

    return val;
}

void NetworkServerStats::fromJson(nlohmann::json& val)
{
    setBytesSent(val.at("bytes_sent"));
    setBytesReceived(val.at("bytes_received"));
    setConnections(val.at("connections"));
    setClosed(val.at("closed"));
    setErrors(val.at("errors"));
    
}


int64_t NetworkServerStats::getBytesSent() const
{
    return m_Bytes_sent;
}
void NetworkServerStats::setBytesSent(int64_t value)
{
    m_Bytes_sent = value;
    
}
int64_t NetworkServerStats::getBytesReceived() const
{
    return m_Bytes_received;
}
void NetworkServerStats::setBytesReceived(int64_t value)
{
    m_Bytes_received = value;
    
}
int64_t NetworkServerStats::getConnections() const
{
    return m_Connections;
}
void NetworkServerStats::setConnections(int64_t value)
{
    m_Connections = value;
    
}
int64_t NetworkServerStats::getClosed() const
{
    return m_Closed;
}
void NetworkServerStats::setClosed(int64_t value)
{
    m_Closed = value;
    
}
int64_t NetworkServerStats::getErrors() const
{
    return m_Errors;
}
void NetworkServerStats::setErrors(int64_t value)
{
    m_Errors = value;
    
}

}
}
}

