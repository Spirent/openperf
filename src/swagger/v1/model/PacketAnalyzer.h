/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PacketAnalyzer.h
 *
 * Packet analyzer; analyzers count received traffic and generate statistics using various analysis methods. 
 */

#ifndef PacketAnalyzer_H_
#define PacketAnalyzer_H_


#include "ModelBase.h"

#include <string>
#include "PacketAnalyzerConfig.h"

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Packet analyzer; analyzers count received traffic and generate statistics using various analysis methods. 
/// </summary>
class  PacketAnalyzer
    : public ModelBase
{
public:
    PacketAnalyzer();
    virtual ~PacketAnalyzer();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PacketAnalyzer members

    /// <summary>
    /// Unique analyzer identifier
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
        /// <summary>
    /// Specifies the unique source of packets for this analyzer. This id may refer to either a port or an interface. 
    /// </summary>
    std::string getSourceId() const;
    void setSourceId(std::string value);
        /// <summary>
    /// Indicates whether this object is currently analyzing packets or not. 
    /// </summary>
    bool isActive() const;
    void setActive(bool value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PacketAnalyzerConfig> getConfig() const;
    void setConfig(std::shared_ptr<PacketAnalyzerConfig> value);
    
protected:
    std::string m_Id;

    std::string m_Source_id;

    bool m_Active;

    std::shared_ptr<PacketAnalyzerConfig> m_Config;

};

}
}
}

#endif /* PacketAnalyzer_H_ */
