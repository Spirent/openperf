/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * PortConfig_dpdk.h
 *
 * DPDK-specific port configuration information
 */

#ifndef PortConfig_dpdk_H_
#define PortConfig_dpdk_H_


#include "ModelBase.h"

#include "PortConfig_dpdk_link.h"
#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// DPDK-specific port configuration information
/// </summary>
class  PortConfig_dpdk
    : public ModelBase
{
public:
    PortConfig_dpdk();
    virtual ~PortConfig_dpdk();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// PortConfig_dpdk members

    /// <summary>
    /// Device name
    /// </summary>
    std::string getDevice() const;
    void setDevice(std::string value);
    bool deviceIsSet() const;
    void unsetDevice();
    /// <summary>
    /// Generic driver name
    /// </summary>
    std::string getDriver() const;
    void setDriver(std::string value);
    bool driverIsSet() const;
    void unsetDriver();
    /// <summary>
    /// Host interface name, if applicable
    /// </summary>
    std::string getInterface() const;
    void setInterface(std::string value);
    bool interfaceIsSet() const;
    void unsetInterface();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PortConfig_dpdk_link> getLink() const;
    void setLink(std::shared_ptr<PortConfig_dpdk_link> value);
        /// <summary>
    /// Device MAC address
    /// </summary>
    std::string getMacAddress() const;
    void setMacAddress(std::string value);
    bool macAddressIsSet() const;
    void unsetMac_address();

protected:
    std::string m_Device;
    bool m_DeviceIsSet;
    std::string m_Driver;
    bool m_DriverIsSet;
    std::string m_Interface;
    bool m_InterfaceIsSet;
    std::shared_ptr<PortConfig_dpdk_link> m_Link;

    std::string m_Mac_address;
    bool m_Mac_addressIsSet;
};

}
}
}

#endif /* PortConfig_dpdk_H_ */
