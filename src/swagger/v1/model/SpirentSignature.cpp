/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "SpirentSignature.h"

namespace swagger {
namespace v1 {
namespace model {

SpirentSignature::SpirentSignature()
{
    m_Stream_id = 0;
    m_FillIsSet = false;
    m_Latency = "";
    
}

SpirentSignature::~SpirentSignature()
{
}

void SpirentSignature::validate()
{
    // TODO: implement validation
}

nlohmann::json SpirentSignature::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["stream_id"] = m_Stream_id;
    if(m_FillIsSet)
    {
        val["fill"] = ModelBase::toJson(m_Fill);
    }
    val["latency"] = ModelBase::toJson(m_Latency);
    

    return val;
}

void SpirentSignature::fromJson(nlohmann::json& val)
{
    setStreamId(val.at("stream_id"));
    if(val.find("fill") != val.end())
    {
        if(!val["fill"].is_null())
        {
            std::shared_ptr<SpirentSignature_fill> newItem(new SpirentSignature_fill());
            newItem->fromJson(val["fill"]);
            setFill( newItem );
        }
        
    }
    setLatency(val.at("latency"));
    
}


int32_t SpirentSignature::getStreamId() const
{
    return m_Stream_id;
}
void SpirentSignature::setStreamId(int32_t value)
{
    m_Stream_id = value;
    
}
std::shared_ptr<SpirentSignature_fill> SpirentSignature::getFill() const
{
    return m_Fill;
}
void SpirentSignature::setFill(std::shared_ptr<SpirentSignature_fill> value)
{
    m_Fill = value;
    m_FillIsSet = true;
}
bool SpirentSignature::fillIsSet() const
{
    return m_FillIsSet;
}
void SpirentSignature::unsetFill()
{
    m_FillIsSet = false;
}
std::string SpirentSignature::getLatency() const
{
    return m_Latency;
}
void SpirentSignature::setLatency(std::string value)
{
    m_Latency = value;
    
}

}
}
}

