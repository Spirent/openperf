/**
* OpenPerf API
* REST API interface for OpenPerf
*
* OpenAPI spec version: 1
* Contact: support@spirent.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * RxFlow.h
 *
 * Counters for a flow of packets
 */

#ifndef RxFlow_H_
#define RxFlow_H_


#include "ModelBase.h"

#include "AnalyzerFlowCounters.h"
#include <string>

namespace swagger {
namespace v1 {
namespace model {

/// <summary>
/// Counters for a flow of packets
/// </summary>
class  RxFlow
    : public ModelBase
{
public:
    RxFlow();
    virtual ~RxFlow();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// RxFlow members

    /// <summary>
    /// Unique received flow identifier
    /// </summary>
    std::string getId() const;
    void setId(std::string value);
        /// <summary>
    /// Unique analyzer result identifier that observed this flow
    /// </summary>
    std::string getAnalyzerResultId() const;
    void setAnalyzerResultId(std::string value);
        /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<AnalyzerFlowCounters> getCounters() const;
    void setCounters(std::shared_ptr<AnalyzerFlowCounters> value);
    
protected:
    std::string m_Id;

    std::string m_Analyzer_result_id;

    std::shared_ptr<AnalyzerFlowCounters> m_Counters;

};

}
}
}

#endif /* RxFlow_H_ */
