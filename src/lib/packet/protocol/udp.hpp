#ifndef _LIB_PACKET_PROTOCOL_UDP_HPP_
#define _LIB_PACKET_PROTOCOL_UDP_HPP_

/**
 * udp header for the packet header C++ Library
 *
 * This file is automatically generated by the library code generator.
 * Do not edit this file manually.
 **/

#include "packet/type/endian.hpp"

namespace packet::protocol {

struct udp
{
    static constexpr uint16_t protocol_length = 8;

    type::endian::number<uint16_t> source;
    type::endian::number<uint16_t> destination;
    type::endian::number<uint16_t> length;
    type::endian::field<2> checksum;
};

/**
 * udp get functions
 **/

uint16_t get_udp_source(const udp& header) noexcept;
uint16_t get_udp_destination(const udp& header) noexcept;
uint16_t get_udp_length(const udp& header) noexcept;
uint16_t get_udp_checksum(const udp& header) noexcept;

/**
 * udp set functions
 **/

void set_udp_source(udp& header, uint16_t value) noexcept;
void set_udp_destination(udp& header, uint16_t value) noexcept;
void set_udp_length(udp& header, uint16_t value) noexcept;
void set_udp_checksum(udp& header, uint16_t value) noexcept;

}

#endif /* _LIB_PACKET_PROTOCOL_UDP_HPP_ */
