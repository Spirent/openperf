#ifndef _LIB_PACKET_PROTOCOL_MPLS_HPP_
#define _LIB_PACKET_PROTOCOL_MPLS_HPP_

/**
 * MPLS header for the packet header C++ Library
 *
 * This file is automatically generated by the library code generator.
 * Do not edit this file manually.
 **/

#include "packet/type/endian.hpp"

namespace packet::protocol {

struct mpls
{
    static constexpr uint16_t protocol_length = 4;

    type::endian::field<3> label_traffic_class_bottom_of_stack;
    type::endian::number<uint8_t> ttl;
};

/**
 * MPLS get functions
 **/

uint32_t get_mpls_label(const mpls& header) noexcept;
uint32_t get_mpls_traffic_class(const mpls& header) noexcept;
bool get_mpls_bottom_of_stack(const mpls& header) noexcept;
uint8_t get_mpls_ttl(const mpls& header) noexcept;

/**
 * MPLS set functions
 **/

void set_mpls_label(mpls& header, uint32_t value) noexcept;
void set_mpls_traffic_class(mpls& header, uint32_t value) noexcept;
void set_mpls_bottom_of_stack(mpls& header, bool value) noexcept;
void set_mpls_ttl(mpls& header, uint8_t value) noexcept;

}

#endif /* _LIB_PACKET_PROTOCOL_MPLS_HPP_ */
