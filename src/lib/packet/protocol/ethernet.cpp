/**
 * Ethernet implementation for the packet header C++ Library
 *
 * This file is automatically generated by the library code generator.
 * Do not edit this file manually.
 **/

#include "ethernet.hpp"

namespace packet::protocol {

/**
 * Ethernet getter implementations
 **/

const type::mac_address& get_ethernet_destination(const ethernet& header) noexcept
{
    return (header.destination);
}

const type::mac_address& get_ethernet_source(const ethernet& header) noexcept
{
    return (header.source);
}

uint16_t get_ethernet_ether_type(const ethernet& header) noexcept
{
    auto tmp = header.ether_type.load<uint16_t>();
    return (tmp);
}

/**
 * Ethernet setter implementations
 **/

void set_ethernet_destination(ethernet& header, const type::mac_address& value) noexcept
{
    header.destination = value;
}

void set_ethernet_destination(ethernet& header, type::mac_address&& value) noexcept
{
    set_ethernet_destination(header, value);
}

void set_ethernet_source(ethernet& header, const type::mac_address& value) noexcept
{
    header.source = value;
}

void set_ethernet_source(ethernet& header, type::mac_address&& value) noexcept
{
    set_ethernet_source(header, value);
}

void set_ethernet_ether_type(ethernet& header, uint16_t value) noexcept
{
    header.ether_type.store(value);
}

}
