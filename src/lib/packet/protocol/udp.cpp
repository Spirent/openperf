/**
 * udp implementation for the packet header C++ Library
 *
 * This file is automatically generated by the library code generator.
 * Do not edit this file manually.
 **/

#include "udp.hpp"

namespace packet::protocol {

/**
 * udp getter implementations
 **/

uint16_t get_udp_source(const udp& header) noexcept
{
    return (header.source.load());
}

uint16_t get_udp_destination(const udp& header) noexcept
{
    return (header.destination.load());
}

uint16_t get_udp_length(const udp& header) noexcept
{
    return (header.length.load());
}

uint16_t get_udp_checksum(const udp& header) noexcept
{
    auto tmp = header.checksum.load<uint16_t>();
    return (tmp);
}

/**
 * udp setter implementations
 **/

void set_udp_source(udp& header, uint16_t value) noexcept
{
    header.source = value;
}

void set_udp_destination(udp& header, uint16_t value) noexcept
{
    header.destination = value;
}

void set_udp_length(udp& header, uint16_t value) noexcept
{
    header.length = value;
}

void set_udp_checksum(udp& header, uint16_t value) noexcept
{
    header.checksum.store(value);
}

}
