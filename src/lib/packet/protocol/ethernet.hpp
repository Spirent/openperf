#ifndef _LIB_PACKET_PROTOCOL_ETHERNET_HPP_
#define _LIB_PACKET_PROTOCOL_ETHERNET_HPP_

/**
 * Ethernet header for the packet header C++ Library
 *
 * This file is automatically generated by the library code generator.
 * Do not edit this file manually.
 **/

#include "packet/type/endian.hpp"
#include "packet/type/mac_address.hpp"

namespace packet::protocol {

struct ethernet
{
    static constexpr uint16_t protocol_length = 14;

    type::mac_address destination;
    type::mac_address source;
    type::endian::field<2> ether_type;
};

/**
 * Ethernet get functions
 **/

const type::mac_address& get_ethernet_destination(const ethernet& header) noexcept;
const type::mac_address& get_ethernet_source(const ethernet& header) noexcept;
uint16_t get_ethernet_ether_type(const ethernet& header) noexcept;

/**
 * Ethernet set functions
 **/

void set_ethernet_destination(ethernet& header, const type::mac_address& value) noexcept;
void set_ethernet_destination(ethernet& header, type::mac_address&& value) noexcept;
void set_ethernet_source(ethernet& header, const type::mac_address& value) noexcept;
void set_ethernet_source(ethernet& header, type::mac_address&& value) noexcept;
void set_ethernet_ether_type(ethernet& header, uint16_t value) noexcept;

}

#endif /* _LIB_PACKET_PROTOCOL_ETHERNET_HPP_ */
