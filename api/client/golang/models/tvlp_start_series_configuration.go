// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TvlpStartSeriesConfiguration TVLP series start configuration
//
// swagger:model TvlpStartSeriesConfiguration
type TvlpStartSeriesConfiguration struct {

	// dynamic results
	DynamicResults *DynamicResultsConfig `json:"dynamic_results,omitempty"`

	// The scale multiplier for load parameters of generators
	// Minimum: > 0
	LoadScale float64 `json:"load_scale,omitempty"`

	// The scale multiplier for the length of each profile entry
	// Minimum: > 0
	TimeScale float64 `json:"time_scale,omitempty"`
}

// Validate validates this tvlp start series configuration
func (m *TvlpStartSeriesConfiguration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDynamicResults(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoadScale(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimeScale(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TvlpStartSeriesConfiguration) validateDynamicResults(formats strfmt.Registry) error {
	if swag.IsZero(m.DynamicResults) { // not required
		return nil
	}

	if m.DynamicResults != nil {
		if err := m.DynamicResults.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dynamic_results")
			}
			return err
		}
	}

	return nil
}

func (m *TvlpStartSeriesConfiguration) validateLoadScale(formats strfmt.Registry) error {
	if swag.IsZero(m.LoadScale) { // not required
		return nil
	}

	if err := validate.Minimum("load_scale", "body", m.LoadScale, 0, true); err != nil {
		return err
	}

	return nil
}

func (m *TvlpStartSeriesConfiguration) validateTimeScale(formats strfmt.Registry) error {
	if swag.IsZero(m.TimeScale) { // not required
		return nil
	}

	if err := validate.Minimum("time_scale", "body", m.TimeScale, 0, true); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this tvlp start series configuration based on the context it is used
func (m *TvlpStartSeriesConfiguration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateDynamicResults(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TvlpStartSeriesConfiguration) contextValidateDynamicResults(ctx context.Context, formats strfmt.Registry) error {

	if m.DynamicResults != nil {
		if err := m.DynamicResults.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dynamic_results")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TvlpStartSeriesConfiguration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TvlpStartSeriesConfiguration) UnmarshalBinary(b []byte) error {
	var res TvlpStartSeriesConfiguration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
