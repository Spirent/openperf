// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TrafficDurationRemainder Specifies how much time remains for an object to be active
//
// swagger:model TrafficDurationRemainder
type TrafficDurationRemainder struct {

	// Specifies how the duration is measured
	// Required: true
	// Enum: [indefinite frames seconds]
	Unit *string `json:"unit"`

	// Specifies the remaining duration for definite durations
	// Minimum: 0
	Value *int32 `json:"value,omitempty"`
}

// Validate validates this traffic duration remainder
func (m *TrafficDurationRemainder) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var trafficDurationRemainderTypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["indefinite","frames","seconds"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		trafficDurationRemainderTypeUnitPropEnum = append(trafficDurationRemainderTypeUnitPropEnum, v)
	}
}

const (

	// TrafficDurationRemainderUnitIndefinite captures enum value "indefinite"
	TrafficDurationRemainderUnitIndefinite string = "indefinite"

	// TrafficDurationRemainderUnitFrames captures enum value "frames"
	TrafficDurationRemainderUnitFrames string = "frames"

	// TrafficDurationRemainderUnitSeconds captures enum value "seconds"
	TrafficDurationRemainderUnitSeconds string = "seconds"
)

// prop value enum
func (m *TrafficDurationRemainder) validateUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, trafficDurationRemainderTypeUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TrafficDurationRemainder) validateUnit(formats strfmt.Registry) error {

	if err := validate.Required("unit", "body", m.Unit); err != nil {
		return err
	}

	// value enum
	if err := m.validateUnitEnum("unit", "body", *m.Unit); err != nil {
		return err
	}

	return nil
}

func (m *TrafficDurationRemainder) validateValue(formats strfmt.Registry) error {
	if swag.IsZero(m.Value) { // not required
		return nil
	}

	if err := validate.MinimumInt("value", "body", int64(*m.Value), 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this traffic duration remainder based on context it is used
func (m *TrafficDurationRemainder) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TrafficDurationRemainder) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TrafficDurationRemainder) UnmarshalBinary(b []byte) error {
	var res TrafficDurationRemainder
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
