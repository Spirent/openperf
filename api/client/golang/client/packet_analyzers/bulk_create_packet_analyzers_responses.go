// Code generated by go-swagger; DO NOT EDIT.

package packet_analyzers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/spirent/openperf/api/client/golang/models"
)

// BulkCreatePacketAnalyzersReader is a Reader for the BulkCreatePacketAnalyzers structure.
type BulkCreatePacketAnalyzersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkCreatePacketAnalyzersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBulkCreatePacketAnalyzersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewBulkCreatePacketAnalyzersOK creates a BulkCreatePacketAnalyzersOK with default headers values
func NewBulkCreatePacketAnalyzersOK() *BulkCreatePacketAnalyzersOK {
	return &BulkCreatePacketAnalyzersOK{}
}

/* BulkCreatePacketAnalyzersOK describes a response with status code 200, with default header values.

Success
*/
type BulkCreatePacketAnalyzersOK struct {
	Payload *BulkCreatePacketAnalyzersOKBody
}

func (o *BulkCreatePacketAnalyzersOK) Error() string {
	return fmt.Sprintf("[POST /packet/analyzers/x/bulk-create][%d] bulkCreatePacketAnalyzersOK  %+v", 200, o.Payload)
}
func (o *BulkCreatePacketAnalyzersOK) GetPayload() *BulkCreatePacketAnalyzersOKBody {
	return o.Payload
}

func (o *BulkCreatePacketAnalyzersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BulkCreatePacketAnalyzersOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BulkCreatePacketAnalyzersBody BulkCreatePacketAnalyzersRequest
//
// Parameters for the bulk create operation
swagger:model BulkCreatePacketAnalyzersBody
*/
type BulkCreatePacketAnalyzersBody struct {

	// List of packet analyzers
	// Required: true
	// Min Items: 1
	Items []*models.PacketAnalyzer `json:"items"`
}

// Validate validates this bulk create packet analyzers body
func (o *BulkCreatePacketAnalyzersBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkCreatePacketAnalyzersBody) validateItems(formats strfmt.Registry) error {

	if err := validate.Required("create"+"."+"items", "body", o.Items); err != nil {
		return err
	}

	iItemsSize := int64(len(o.Items))

	if err := validate.MinItems("create"+"."+"items", "body", iItemsSize, 1); err != nil {
		return err
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("create" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this bulk create packet analyzers body based on the context it is used
func (o *BulkCreatePacketAnalyzersBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkCreatePacketAnalyzersBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("create" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BulkCreatePacketAnalyzersBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BulkCreatePacketAnalyzersBody) UnmarshalBinary(b []byte) error {
	var res BulkCreatePacketAnalyzersBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BulkCreatePacketAnalyzersOKBody BulkCreatePacketAnalyzersResponse
swagger:model BulkCreatePacketAnalyzersOKBody
*/
type BulkCreatePacketAnalyzersOKBody struct {

	// List of packet analyzers
	// Required: true
	// Min Items: 1
	Items []*models.PacketAnalyzer `json:"items"`
}

// Validate validates this bulk create packet analyzers o k body
func (o *BulkCreatePacketAnalyzersOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkCreatePacketAnalyzersOKBody) validateItems(formats strfmt.Registry) error {

	if err := validate.Required("bulkCreatePacketAnalyzersOK"+"."+"items", "body", o.Items); err != nil {
		return err
	}

	iItemsSize := int64(len(o.Items))

	if err := validate.MinItems("bulkCreatePacketAnalyzersOK"+"."+"items", "body", iItemsSize, 1); err != nil {
		return err
	}

	for i := 0; i < len(o.Items); i++ {
		if swag.IsZero(o.Items[i]) { // not required
			continue
		}

		if o.Items[i] != nil {
			if err := o.Items[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bulkCreatePacketAnalyzersOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this bulk create packet analyzers o k body based on the context it is used
func (o *BulkCreatePacketAnalyzersOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateItems(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BulkCreatePacketAnalyzersOKBody) contextValidateItems(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Items); i++ {

		if o.Items[i] != nil {
			if err := o.Items[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bulkCreatePacketAnalyzersOK" + "." + "items" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BulkCreatePacketAnalyzersOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BulkCreatePacketAnalyzersOKBody) UnmarshalBinary(b []byte) error {
	var res BulkCreatePacketAnalyzersOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
