// Code generated by go-swagger; DO NOT EDIT.

package cpu_generator

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetCPUInfoReader is a Reader for the GetCPUInfo structure.
type GetCPUInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCPUInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCPUInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCPUInfoOK creates a GetCPUInfoOK with default headers values
func NewGetCPUInfoOK() *GetCPUInfoOK {
	return &GetCPUInfoOK{}
}

/* GetCPUInfoOK describes a response with status code 200, with default header values.

Success
*/
type GetCPUInfoOK struct {
	Payload *GetCPUInfoOKBody
}

func (o *GetCPUInfoOK) Error() string {
	return fmt.Sprintf("[GET /cpu-info][%d] getCpuInfoOK  %+v", 200, o.Payload)
}
func (o *GetCPUInfoOK) GetPayload() *GetCPUInfoOKBody {
	return o.Payload
}

func (o *GetCPUInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCPUInfoOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCPUInfoOKBody CpuInfoResult
swagger:model GetCPUInfoOKBody
*/
type GetCPUInfoOKBody struct {

	// Processor architecture name
	Architecture string `json:"architecture,omitempty"`

	// Processor cache line size
	CacheLineSize int32 `json:"cache_line_size,omitempty"`

	// Number of cores
	Cores int32 `json:"cores,omitempty"`
}

// Validate validates this get CPU info o k body
func (o *GetCPUInfoOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get CPU info o k body based on context it is used
func (o *GetCPUInfoOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCPUInfoOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCPUInfoOKBody) UnmarshalBinary(b []byte) error {
	var res GetCPUInfoOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
