swagger: "2.0"

info:
  title: OpenPerf API
  description: REST API interface for OpenPerf
  termsOfService: TODO
  contact:
    name: "Spirent, Inc."
    url: "http://spirent.com"
    email: "support@spirent.com"
  license:
    name: "TBD"
    url: "https://github.com/Spirent/openperf/blob/master/LICENSE"
  version: "1"

schemes:
  - http
  - https

host: localhost

produces:
  - application/json

consumes:
  - application/json

parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

tags:
  - name: Interfaces
  - name: Modules
  - name: Ports
  - name: Stacks
  - name: TimeCounters
  - name: TimeKeeper
  - name: TimeSources

basePath: /

paths:

  /interfaces:
    get:
      operationId: ListInterfaces
      tags:
        - Interfaces
      summary: List network interfaces
      description: >
        The `interfaces` endpoint returns all network interfaces that are
        available for use as stack entry/exit points.
      parameters:
        - name: port_id
          in: query
          description: Filter by port id
          required: false
          type: string
        - name: eth_mac_address
          in: query
          description: Filter by Ethernet MAC address
          required: false
          type: string
        - name: ipv4_address
          in: query
          description: Filter by IPv4 address
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Interface"
    post:
      operationId: CreateInterface
      tags:
        - Interfaces
      summary: Create a network interface
      description: Create a new network interface.
      parameters:
        - name: interface
          in: body
          description: New network interface
          required: true
          schema:
            $ref: "#/definitions/Interface"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Interface"

  /interfaces/{id}:
    get:
      operationId: GetInterface
      tags:
        - Interfaces
      summary: Get a network interface
      description: Returns a network interface, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Interface"
    delete:
      operationId: DeleteInterface
      tags:
        - Interfaces
      summary: Delete a network interface
      description: Deletes an existing interface. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /interfaces/x/bulk-create:
    post:
      operationId: BulkCreateInterfaces
      tags:
        - Interfaces
      summary: Bulk create network interfaces
      description: >
        Create multiple network interfaces. Requests are processed in an
        all-or-nothing manner, i.e. a single network interface creation failure
        causes all network interface creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreateInterfacesRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of network interfaces
                items:
                  $ref: "#/definitions/Interface"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkCreateInterfacesResponse
            properties:
              items:
                type: array
                description: List of network interfaces
                items:
                  $ref: "#/definitions/Interface"
                minItems: 1
            required:
              - items

  /interfaces/x/bulk-delete:
    post:
      operationId: BulkDeleteInterfaces
      tags:
        - Interfaces
      summary: Bulk delete network interfaces
      description: >
        Best-effort delete multiple network interfaces. Non-existent interface
        ids do not cause errors. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeleteInterfacesRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of interface identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /modules:
    get:
      operationId: ListModules
      tags:
        - Modules
      summary: List Modules
      description: The `modules` endpoint returns all loaded modules.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Module"

  /modules/{id}:
    get:
      operationId: GetModule
      tags:
        - Modules
      summary: Get a module
      description: Returns a module, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Module"

  /ports:
    get:
      operationId: ListPorts
      tags:
        - Ports
      summary: List ports
      description: >
        The `ports` endpoint returns all physical ports and port-equivalents
        that are available for network interfaces.
      parameters:
        - name: kind
          in: query
          description: Filter by kind
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Port"
    post:
      operationId: CreatePort
      tags:
        - Ports
      summary: Create a port
      description: Create a new port-equivalent, e.g. a bonded port.
      parameters:
        - name: port
          in: body
          description: New port
          required: true
          schema:
            $ref: "#/definitions/Port"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Port"

  /ports/{id}:
    get:
      operationId: GetPort
      tags:
        - Ports
      summary: Get a port
      description: Returns a port, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Port"
    put:
      operationId: UpdatePort
      tags:
        - Ports
      summary: Update a port
      description: "Updates an existing port's configuration. Idempotent."
      parameters:
        - $ref: "#/parameters/id"
        - name: port
          in: body
          description: Updated port
          required: true
          schema:
            $ref: "#/definitions/Port"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Port"
    delete:
      operationId: DeletePort
      tags:
        - Ports
      summary: Delete a port
      description: Deletes an existing port equivalent, e.g. a bonded port. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /stacks:
    get:
      operationId: ListStacks
      tags:
        - Stacks
      summary: List stacks
      description: The `stacks` endpoint returns all TCP/IP stacks.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Stack"

  /stacks/{id}:
    get:
      operationId: GetStack
      tags:
        - Stacks
      summary: Get a stack
      description: Returns a stack, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Stack"

  /time-counters:
    get:
      operationId: ListTimeCounters
      tags:
        - TimeCounters
      summary: List time counters
      description: |
        The `time-counters` endpoint returns all local time counters
        that are available for measuring the passage of time.  This
        list is for informational purposes only.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeCounter"

  /time-counters/{id}:
    get:
      operationId: GetTimeCounter
      tags:
        - TimeCounters
      summary: Get a time counter
      description: Returns a time counter, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeCounter"

  /time-keeper:
    get:
      operationId: GetTimeKeeper
      tags:
        - TimeKeeper
      summary: Get a time keeper.
      description: Returns the system time keeper, aka clock.
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeKeeper"

  /time-sources:
    get:
      operationId: ListTimeSources
      tags:
        - TimeSources
      summary: List reference clocks
      description: |
        The `time-sources` endpoint returns all time sources
        that are used for syncing the local time.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeSource"
    post:
      operationId: CreateTimeSource
      tags:
        - TimeSources
      summary: Register a time source for time syncing.
      description: |
        Registers a new time source for time syncing. Time sources are
        immutable.
      parameters:
        - name: timesource
          in: body
          description: New time source
          required: true
          schema:
            $ref: "#/definitions/TimeSource"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/TimeSource"

  /time-sources/{id}:
    get:
      operationId: GetTimeSource
      tags:
        - TimeSources
      summary: Get a time source
      description: Get a time source, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeSource"
    delete:
      operationId: DeleteTimeSource
      tags:
        - TimeSources
      summary: Delete a time source
      description: Deletes an existing time source. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content


definitions:
  Interface:
    type: object
    description: Network interface
    properties:
      id:
        type: string
        description: Unique interface identifier
      port_id:
        type: string
        description: Port identifier
      config:
        type: object
        description: Interface configuration
        properties:
          protocols:
            type: array
            description: >
              A stack of protocol configurations, beginning with the outermost
              protocol (i.e. closest to the physical port)
            items:
              $ref: "#/definitions/InterfaceProtocolConfig"
            minItems: 1
        required:
          - protocols
      stats:
        $ref: "#/definitions/InterfaceStats"
    required:
      - id
      - port_id
      - config
      - stats

  InterfaceProtocolConfig:
    type: object
    description: Network interface protocol configuration
    properties:
      eth:
        type: object
        description: Ethernet protocol configuration
        properties:
          mac_address:
            type: string
            description: MAC address
        required:
          - mac_address
      ipv4:
        type: object
        description: IPv4 protocol configuration
        properties:
          method:
            type: string
            description: Configuration method
            enum:
              - static
              - dhcp
          static:
            type: object
            description: Static configuration parameters
            properties:
              address:
                type: string
                description: IP address
              prefix_length:
                type: integer
                description: Prefix length
                format: int32
              gateway:
                type: string
                description: Default gateway
            required:
              - address
              - prefix_length
          dhcp:
            type: object
            description: DHCP configuration parameters
            properties:
              hostname:
                type: string
                description: Hostname to be requested
              client:
                type: string
                description: Client identifier
        required:
          - method

  InterfaceStats:
    type: object
    description: Per-interface statistics
    properties:
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_bytes:
        type: integer
        description: Received bytes
        format: int64
      tx_bytes:
        type: integer
        description: Transmitted bytes
        format: int64
      rx_errors:
        type: integer
        description: Receive-side errors
        format: int64
      tx_errors:
        type: integer
        description: Transmit-side errors
        format: int64
    required:
      - rx_packets
      - tx_packets
      - rx_bytes
      - tx_bytes
      - rx_errors
      - tx_errors

  Module:
    type: object
    description: A test module that has been statically linked or dynamically loaded into the process
    properties:
      id:
        type: string
        description: Unique module identifier
        readOnly: true
      description:
        type: string
        description: Description of module functionality
        readOnly: true
      version:
        $ref: "#/definitions/ModuleVersion"
      linkage:
        type: string
        description: Linkage type
        readOnly: true
        enum:
          - static
          - dynamic
      path:
        type: string
        description: Path to module binary (dynamically-loaded modules only).
        readOnly: true
    required:
      - id
      - description
      - version
      - linkage

  ModuleVersion:
    type: object
    description: Module version information
    properties:
      version:
        type: integer
        description: Module version number
        format: int32
        readOnly: true
      build_number:
        type: string
        description: Module build number
        readOnly: true
      build_date:
        type: string
        description: Module build date
        format: date-time
        readOnly: true
      source_commit:
        type: string
        description: Module version control revision
        readOnly: true
    required:
      - version

  Port:
    type: object
    description: Physical port or port-equivalent (e.g. bonded ports)
    properties:
      id:
        type: string
        description: Unique port identifier
      kind:
        type: string
        description: Port kind
        enum:
          - dpdk
          - host
          - bond
      config:
        $ref: "#/definitions/PortConfig"
      status:
        $ref: "#/definitions/PortStatus"
      stats:
        $ref: "#/definitions/PortStats"
    required:
      - id
      - kind
      - config
      - status
      - stats

  PortConfig:
    type: object
    description: Port configuration
    properties:
      dpdk:
        type: object
        description: DPDK-specific configuration information
        properties:
          auto_negotiation:
            type: boolean
            description: Enable link auto-negotiation
          speed:
            type: integer
            description: Manually-configured port speed (in Mbps)
            format: int64
          duplex:
            type: string
            description: Manually-configured port duplex
            enum:
              - full
              - half
        required:
          - auto_negotiation
      #host:
      bond:
        type: object
        description: Bond-specific configuration information
        properties:
          mode:
            type: string
            description: Port bonding mode
            enum:
              - lag_802_3_ad
          ports:
            type: array
            description: Unique identifiers of bonded ports
            items:
              type: string
            minItems: 1
        required:
          - mode
          - ports

  PortStats:
    type: object
    description: Port statistics
    properties:
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_bytes:
        type: integer
        description: Received bytes
        format: int64
      tx_bytes:
        type: integer
        description: Transmitted bytes
        format: int64
      rx_errors:
        type: integer
        description: Receive-side errors
        format: int64
      tx_errors:
        type: integer
        description: Transmit-side errors
        format: int64
    required:
      - rx_packets
      - tx_packets
      - rx_bytes
      - tx_bytes
      - rx_errors
      - tx_errors

  PortStatus:
    type: object
    description: Port status
    properties:
      link:
        type: string
        description: Link status
        enum:
          - up
          - down
          - unknown
      speed:
        type: integer
        description: Port speed (in Mbps)
        format: int64
      duplex:
        type: string
        description: Port duplex
        enum:
          - full
          - half
          - unknown
    required:
      - link
      - speed
      - duplex

  Stack:
    type: object
    description: A TCP/IP stack instance
    properties:
      id:
        type: string
        description: Unique stack identifier
      stats:
        $ref: "#/definitions/StackStats"
    required:
      - id
      - stats

  StackElementStats:
    type: object
    description: Stack element statistics
    properties:
      used:
        type: integer
        description: Used (elements)
        format: int32
      max:
        type: integer
        description: Maximum (elements)
        format: int32
      errors:
        type: integer
        description: Errors (count)
        format: int32
    required:
      - used
      - max
      - errors

  StackMemoryStats:
    type: object
    description: Stack memory statistics
    properties:
      name:
        type: string
        description: Pool name
      available:
        type: integer
        description: Available (bytes free)
        format: int64
      used:
        type: integer
        description: Used (bytes allocated)
        format: int64
      max:
        type: integer
        description: Maximum (bytes allocated)
        format: int64
      errors:
        type: integer
        description: Errors (count)
        format: int64
      illegal:
        type: integer
        description: Illegal operations (count)
        format: int64
    required:
      - name
      - available
      - used
      - max
      - errors
      - illegal

  StackProtocolStats:
    type: object
    description: Stack per-protocol statistics
    properties:
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      forwarded_packets:
        type: integer
        description: Forwarded packets
        format: int64
      dropped_packets:
        type: integer
        description: Dropped packets
        format: int64
      checksum_errors:
        type: integer
        description: Checksum errors
        format: int64
      length_errors:
        type: integer
        description: Invalid length errors
        format: int64
      memory_errors:
        type: integer
        description: Out of memory errors
        format: int64
      routing_errors:
        type: integer
        description: Routing errors
        format: int64
      protocol_errors:
        type: integer
        description: Protocol error
        format: int64
      option_errors:
        type: integer
        description: Errors in options
        format: int64
      misc_errors:
        type: integer
        description: Miscellaneous errors
        format: int64
      cache_hits:
        type: integer
        description: Cache hits
        format: int64
    required:
      - tx_packets
      - rx_packets
      - forwarded_packets
      - dropped_packets
      - checksum_errors
      - length_errors
      - memory_errors
      - routing_errors
      - protocol_errors
      - option_errors
      - misc_errors
      - cache_hits

  StackStats:
    type: object
    description: Stack statistics
    properties:
      arp:
        $ref: "#/definitions/StackProtocolStats"
      ipv4:
        $ref: "#/definitions/StackProtocolStats"
      ipv4_frag:
        $ref: "#/definitions/StackProtocolStats"
      icmpv4:
        $ref: "#/definitions/StackProtocolStats"
      igmp:
        $ref: "#/definitions/StackProtocolStats"
      nd:
        $ref: "#/definitions/StackProtocolStats"
      ipv6:
        $ref: "#/definitions/StackProtocolStats"
      ipv6_frag:
        $ref: "#/definitions/StackProtocolStats"
      icmpv6:
        $ref: "#/definitions/StackProtocolStats"
      mld:
        $ref: "#/definitions/StackProtocolStats"
      udp:
        $ref: "#/definitions/StackProtocolStats"
      tcp:
        $ref: "#/definitions/StackProtocolStats"
      heap:
        $ref: "#/definitions/StackMemoryStats"
      pools:
        type: array
        items:
          $ref: "#/definitions/StackMemoryStats"
      sems:
        $ref: "#/definitions/StackElementStats"
      mutexes:
        $ref: "#/definitions/StackElementStats"
      mboxes:
        $ref: "#/definitions/StackElementStats"
    required:
      - arp
      - ipv4
      - ipv4_frag
      - icmpv4
      - igmp
      - nd
      - ipv6
      - ipv6_frag
      - icmpv6
      - mld
      - udp
      - tcp
      - heap
      - pools
      - sems
      - mutexes
      - mboxes

  TimeCounter:
    type: object
    description: A source of clock ticks
    properties:
      id:
        type: string
        description: Unique time counter identifier
      name:
        type: string
        description: Time counter name
      frequency:
        type: integer
        description: Tick rate of the counter, in Hz.
        format: int64
      priority:
        type: integer
        description: |
          Priority determines which counter to use in situations where
          there are multiple counters available (higher number = higher priority).
          Priority is always positive.
        format: int32
    required:
      - id
      - name
      - frequency
      - priority

  TimeKeeperState:
    type: object
    description: TimeKeeper internal state information
    properties:
      frequency:
        type: number
        description: |
          The time counter frequency as measured by the interval between the
          two best timestamp exchanges with the time source over the past two
          hours, in Hz.
        format: int64
      frequency_error:
        type: number
        description: The estimated error of the time counter frequency measurement, in Hz.
        format: int64
      local_frequency:
        type: number
        description: |
          The time counter frequency as measured by the interval between the
          two best timestamp exchanges with the time source over the past hour,
          in Hz. This value is used to help determine time stamp error due to
          time counter frequency drift.
        format: int64
      local_frequency_error:
        type: number
        description: The estimated error of the local time counter frequency measurement, in Hz.
        format: int64
      offset:
        type: number
        description: |
          The offset applied to time counter derived timestamp values,
          in seconds.  This value comes from the system host clock.
        format: double
      synced:
        type: boolean
        description: |
          The time keeper is considered to be synced to the time source if a clock
          offset, theta, has been calculated and applied within the past 20 minutes.
      theta:
        type: number
        description: |
          The calculated correction to apply to the offset, based on the
          measured time counter frequency and time source timestamps.
        format: double
    required:
      - offset
      - boolean

  TimeKeeperStats:
    type: object
    description: TimeKeeper statistics
    properties:
      frequency_accept:
        type: number
        description: The number of times the frequency calculation has been updated.
        format: int64
      frequency_reject:
        type: number
        description: |
          The number of times the frequency calculation has been rejected due
          to an excessive delta between old and new values.
        format: int64
      local_frequency_accept:
        type: number
        description: The number of times the local frequency calculation has been updated.
        format: int64
      local_frequency_reject:
        type: number
        description: |
          The number of times the local frequency calculation has been rejected
          due to an excessive delta between old and new values.
        format: int64
      round_trip_times:
        type: object
        description: |
          The round trip time measures the total elapsed time to make a timestamp
          exchange with the remote time source.  The TimeKeeper stores RTT data so
          that the least delayed clock exchanges can be given extra weight when
          calculating the current clock offset.
        properties:
          avg:
            type: number
            description: the average round trip time, in seconds.
            format: double
          max:
            type: number
            description: The maximum round trip time, in seconds.
            format: double
          min:
            type: number
            description: The minimum round trip time, in seconds.
            format: double
          size:
            type: number
            description: The number of round trip times in the data set.
            format: int64
        required:
          - size
      theta_accept:
        type: number
        description: The number of times the theta calculation has been updated.
        format: int64
      theta_reject:
        type: number
        description: |
          Then umber of times the theta calculation has been rejected due to
          excessive delta between old and new values.
        format: int64
      timestamps:
        type: number
        description: |
          The number of timestamps in the current working set of timestamps.
          Old timestamps are dropped from the history of timestamps as they
          become irrelevant.
        format: int64
    required:
      - frequency_accept
      - frequency_reject
      - local_frequency_accept
      - local_frequency_reject
      - round_trip_times
      - theta_accept
      - theta_reject
      - timestamps

  TimeKeeper:
    type: object
    description: |
      A combination of a time source and a time counter used to measure
      the passage of time, aka a clock
    properties:
      state:
        $ref: "#/definitions/TimeKeeperState"
      stats:
        $ref: "#/definitions/TimeKeeperStats"
      time:
        type: string
        description: The current time and date in ISO8601 format
        format: date-time
      time_counter_id:
        type: string
        description: time counter used for measuring time intervals
      time_source_id:
        type: string
        description: time source used for wall-clock synchronization
    required:
      - state
      - stats
      - time
      - time_counter_id
      - time_source_id

  TimeSourceConfig:
    type: object
    description: time source configuration
    properties:
      ntp:
        type: object
        description: Network Time Protocol Server
        properties:
          hostname:
            type: string
            description: network hostname or address for server
          port:
            type: string
            default: "ntp"
            description: service name or port for server
        required:
          - hostname

  TimeSourceStats:
    type: object
    description: time source statistics
    properties:
      ntp:
        type: object
        description: NTP statistics
        properties:
          rx_packets:
            type: integer
            description: Received packets
            format: int64
          tx_packets:
            type: integer
            description: Transmitted packets
            format: int64
          stratum:
            type: integer
            description: |
              Time source distance from a NTP reference clock, in network hops.
            format: int32
        required:
          - rx_packets
          - tx_packets

  TimeSource:
    type: object
    description: A reference time source
    properties:
      id:
        type: string
        description: Unique time source identifier
      kind:
        type: string
        description: time source kind
        enum:
          - ntp
      config:
        $ref: "#/definitions/TimeSourceConfig"
      stats:
        $ref: "#/definitions/TimeSourceStats"
    required:
      - id
      - kind
      - config
      - stats
