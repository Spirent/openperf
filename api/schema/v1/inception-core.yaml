swagger: "2.0"

info:
  title: Inception Core API
  description: REST API interface to the Inception Core
  termsOfService: TODO
  contact:
    name: "Spirent, Inc."
    url: "http://spirent.com"
    email: "support@spirent.com"
  license:
    name: "TBD"
    url: "https://github.com/SpirentOrion/inception-core/blob/master/LICENSE"
  version: "1"

schemes:
  - http
  - https

host: localhost

produces:
  - application/json

consumes:
  - application/json

parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

tags:
  - name: Analyzers
  - name: Captures
  - name: Frames
  - name: Generators
  - name: Interfaces
  - name: Modules
  - name: Ports
  - name: Stacks
  - name: Streams

basePath: /

paths:

  /analyzers:
    get:
      operationId: ListAnalyzers
      tags:
        - Analyzers
      summary: List signature traffic analyzers
      description: >
        The `analyzers` endpoint returns all signature traffic analyzers
        that are configured to collect and report test traffic statistics.
      parameters:
        - name: port_id
          in: query
          description: Filter by port id
          required: false
          type: string
        - name: interface_id
          description: Filter by interface id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Analyzer"
    post:
      operationId: CreateAnalyzer
      tags:
        - Analyzers
      summary: Create a signature traffic analyzer
      description: Create a new signature traffic analyzer
      parameters:
        - name: config
          in: body
          description: New signature traffic analyzer configuration
          required: true
          schema:
            $ref: "#/definitions/AnalyzerConfig"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Analyzer"

  /analyzers/{id}:
    get:
      operationId: GetAnalyzer
      tags:
        - Analyzers
      summary: Get a signature traffic analyzer
      description: Returns a signature traffic analyzer by analyzer id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Analyzer"
    delete:
      operationId: DeleteAnalyzer
      tags:
        - Analyzers
      summary: Delete a signature traffic analyzer by analyzer id. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /analyzers/{id}/start:
    post:
      operationId: StartAnalyzer
      tags:
        - Analyzers
      summary: Tell an analyzer to start processing received signature traffic
      description: Used to start a non-running analyzer.
      parameters:
        - name: duration
          in: body
          description: Duration to run the signature traffic analyzer
          required: false
          schema:
            $ref: "#/definitions/DurationConfig"
      responses:
        202:
          description: Accepted
          schema:
            type: string
            description: URL to analyzer results object

  /analyzers/{id}/stop:
    post:
      operationId: StopAnalyzer
      tags:
        - Analyzers
      summary: Tell an analyzer to stop processing received signature traffic.
      description: Used to halt a running analyzer. Idempotent.
      responses:
        204:
          description: No Content

  /analyzer-results/{id}:
    get:
      operationId: GetAnalyzerResult
      tags:
        - Analyzers
      summary: Get results from a signature traffic analyzer
      description: Returns results from a signature traffic analyzer by result id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/AnalyzerResult"
    delete:
      operationId: DeleteAnalyzerResult
      tags:
        - Analyzers
      summary: >
        Delete results from a signature traffic analyzer. Also deletes all child
        rx-stream objects. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /captures:
    get:
      operationId: ListCaptures
      tags:
        - Capture
      summary: List capture configurations
      description: The `captures` endpoint returns all capture configurations.
      parameters:
        - name: port_id
          in: query
          description: Filter by port id
          required: false
          type: string
        - name: interface_id
          in: query
          description: Filter by interface id
          required: false
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Capture"
    post:
      operationId: CreateCapture
      tags:
        - Capture
      summary: Create a capture object
      description: Create a new capture object
      parameters:
        - name: config
          in: body
          description: New capture configuration
          required: true
          schema:
            $ref: "#/definitions/CaptureConfig"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Capture"

  /captures/{id}/start:
    post:
      operationId: StartCapture
      tags:
        - Captures
      summary: Tell a capture object to start capturing packets.
      description: Used to start a non-running capture.
      parameters:
        - name: duration
          in: body
          description: Duration to run the traffic capture
          required: false
          schema:
            $ref: "#/definitions/DurationConfig"
      responses:
        202:
          description: Accepted
          schema:
            type: string
            description: URL to capture results object

  /captures/{id}/stop:
    post:
      operationId: StopCapture
      tags:
        - Captures
      summary: Tell a capture object to stop capturing packets.
      description: Used to halt a running capture. Idempotent.
      responses:
        204:
          description: No Content

  /capture-results/{id}:
    get:
      operationId: GetCaptureResult
      tags:
        - Captures
      summary: Get a packet capture result
      description: Returns results of a packet capture by capture id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/CaptureResult"
    delete:
      operationId: DeleteCaptureResult
      tags:
        - Captures
      summary: >
        Delete results from a packet capture. Also delete the corresponding
        capture file in `capture-files`.  Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /capture-files:
    get:
      operationId: ListCaptureFiles
      tags:
        - Captures
      summary: List packet captures
      description: >
        The `capture-files` endpoint returns all packet captures that have been
        created by capture instances.
      parameters:
        - name: port_id
          in: query
          description: Filter by capture port id
          required: false
          type: string
        - name: interface_id
          in: query
          description: Filter by capture interface id
          required: false
          type: string
        - name: capture_id
          in: query
          description: Filter by capture configuration id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitons/CaptureFile"

  /capture-files/{id}:
    get:
      operationId: GetCaptureFile
      tags:
        - Capture
      summary: Get a packet capture file
      description: Returns a file containing capture data
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            type: file
            description: Capture File
            produces: application/vnd.tcpdump.pcap

  /generators:
    get:
      operationId: ListGenerators
      tags:
        - Generators
      summary: List signature traffic generators
      description: >
        The `generators` endpoint returns all signature traffic generators
        that are configured to transmit signature test traffic.
      parameters:
        - name: port_id
          in: query
          description: Filter by port id
          required: false
          type: string
        - name: interface_id
          in: query
          description: Filter by interface id
          required: false
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Generator"
    post:
      operationId: CreateGenerator
      tags:
        - Generators
      summary: Create a signature traffic generator
      description: Create a new signature traffic generator
      parameters:
        - name: config
          in: body
          description: New signature traffic generator configuration
          required: true
          schema:
            $ref: "#/definitions/GeneratorConfig"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Generator"

  /generators/{id}:
    get:
      operationId: GetGenerator
      tags:
        - Generators
      summary: Get a signature traffic generator
      description: Returns a signature traffic generator, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Generator"
    delete:
      operationId: DeleteGenerator
      tags:
        - Generators
      summary: Delete a signature traffic generator
      description: Deletes an existing signature traffic generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /generators/{id}/start:
    post:
      operationId: StartGenerator
      tags:
        - Generators
      summary: Tell a generator to start transmitting stateless test traffic
      description: Used to start a non-running generator.
      parameters:
        - name: duration
          in: body
          description: Duration to run the signature traffic generator
          required: false
          schema:
            $ref: "#/definitions/DurationConfig"
      responses:
        202:
          description: Accepted
          schema:
            type: string
            description: URL to generator results object

  /generators/{id}/stop:
    post:
      operationId: StopGenerator
      tags:
        - Generators
      summary: Tell a generator to stop transmitting stateless test traffic
      description: Used to halt a running generator. Idempotent.
      responses:
        204:
          description: No Content

  /generator-results/{id}:
    get:
      operationId: GetGeneratorResult
      tags:
        - Generators
      summary: Get a result from a signature traffic generator
      description: Returns results from a signature traffic generator by result id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/GeneratorResult"
    delete:
      operationId: DeleteGeneratorResult
      tags:
        - Generators
      summary: >
        Delete results from a signature traffic generator. Also deletes all child
        tx-stream objects. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /interfaces:
    get:
      operationId: ListInterfaces
      tags:
        - Interfaces
      summary: List network interfaces
      description: >
        The `interfaces` endpoint returns all network interfaces that are
        available for use as stack entry/exit points.
      parameters:
        - name: port_id
          in: query
          description: Filter by port id
          required: false
          type: string
        - name: eth_mac_address
          in: query
          description: Filter by Ethernet MAC address
          required: false
          type: string
        - name: ipv4_address
          in: query
          description: Filter by IPv4 address
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Interface"
    post:
      operationId: CreateInterface
      tags:
        - Interfaces
      summary: Create a network interface
      description: Create a new network interface.
      parameters:
        - name: interface
          in: body
          description: New network interface
          required: true
          schema:
            $ref: "#/definitions/Interface"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Interface"

  /interfaces/{id}:
    get:
      operationId: GetInterface
      tags:
        - Interfaces
      summary: Get a network interface
      description: Returns a network interface, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Interface"
    delete:
      operationId: DeleteInterface
      tags:
        - Interfaces
      summary: Delete a network interface
      description: Deletes an existing interface. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /interfaces/x/bulk-create:
    post:
      operationId: BulkCreateInterfaces
      tags:
        - Interfaces
      summary: Bulk create network interfaces
      description: >
        Create multiple network interfaces. Requests are processed in an
        all-or-nothing manner, i.e. a single network interface creation failure
        causes all network interface creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreateInterfacesRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of network interfaces
                items:
                  $ref: "#/definitions/Interface"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkCreateInterfacesResponse
            properties:
              items:
                type: array
                description: List of network interfaces
                items:
                  $ref: "#/definitions/Interface"
                minItems: 1
            required:
              - items

  /interfaces/x/bulk-delete:
    post:
      operationId: BulkDeleteInterfaces
      tags:
        - Interfaces
      summary: Bulk delete network interfaces
      description: >
        Best-effort delete multiple network interfaces. Non-existent interface
        ids do not cause errors. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeleteInterfacesRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of interface identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /modules:
    get:
      operationId: ListModules
      tags:
        - Modules
      summary: List Modules
      description: The `modules` endpoint returns all loaded modules.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Module"

  /modules/{id}:
    get:
      operationId: GetModule
      tags:
        - Modules
      summary: Get a module
      description: Returns a module, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Module"

  /ports:
    get:
      operationId: ListPorts
      tags:
        - Ports
      summary: List ports
      description: >
        The `ports` endpoint returns all physical ports and port-equivalents
        that are available for network interfaces.
      parameters:
        - name: kind
          in: query
          description: Filter by kind
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Port"
    post:
      operationId: CreatePort
      tags:
        - Ports
      summary: Create a port
      description: Create a new port-equivalent, e.g. a bonded port.
      parameters:
        - name: port
          in: body
          description: New port
          required: true
          schema:
            $ref: "#/definitions/Port"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/Port"

  /ports/{id}:
    get:
      operationId: GetPort
      tags:
        - Ports
      summary: Get a port
      description: Returns a port, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Port"
    put:
      operationId: UpdatePort
      tags:
        - Ports
      summary: Update a port
      description: "Updates an existing port's configuration. Idempotent."
      parameters:
        - $ref: "#/parameters/id"
        - name: port
          in: body
          description: Updated port
          required: true
          schema:
            $ref: "#/definitions/Port"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Port"
    delete:
      operationId: DeletePort
      tags:
        - Ports
      summary: Delete a port
      description: Deletes an existing port equivalent, e.g. a bonded port. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

    /rx-streams:
    get:
      operationId: ListRxStreams
      tags:
        - Streams
      summary: List received signature streams
      description: >
        The `rx-streams` endpoint returns all signature streams that have been
        received by analyzer instances.
      parameters:
        - name: analyzer_id
          in: query
          description: Filter by receive analyzer id
          required: false
          type: string
        - name: interface_id
          in: query
          description: Filter by receive interface id
          required: false
          type: string
        - name: port_id
          in: query
          description: Filter by receive port id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitons/RxStream"

  /rx-streams/{id}:
    get:
      operationId: GetRxStream
      tags:
        - Streams
      summary: Get a stateless receive stream
      description: Returns a stateless receive stream by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/RxStream"

  /stacks:
    get:
      operationId: ListStacks
      tags:
        - Stacks
      summary: List stacks
      description: The `stacks` endpoint returns all TCP/IP stacks.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Stack"

  /stacks/{id}:
    get:
      operationId: GetStack
      tags:
        - Stacks
      summary: Get a stack
      description: Returns a stack, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/Stack"

  /tx-streams:
    get:
      operationId: ListTxStreams
      tags:
        - Streams
      summary: List stateless transmit streams
      description: >
        The `tx-streams` endpoint returns all stateless transmit streams that
        were generated by generator instances.
      parameters:
        - name: generator_id
          in: query
          description: Filter by generator id
          required: false
          type: string
        - name: interface_id
          in: query
          description: Filter by receive interface id
          required: false
          type: string
        - name: port_id
          in: query
          description: Filter by receive port id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitons/TxStream"

/tx-streams/{id}:
    get:
      operationId: GetTxStream
      tags:
        - Streams
      summary: Get a stateless transmit stream
      description: Returns a stateless transmit stream by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TxStream"

definitions:
  Analyzer:
    type: object
    description: >
      Stateless traffic analyzer; analyzers count received signature traffic via
      various aggregation methods.
    properties:
      id:
        type: string
        description: Unique analyzer identifier
      config:
        $ref: "#/definitions/AnalyzerConfig"
      running:
        type: boolean
        description: >
          Indicates whether this object is currently analyzing stateless test
          traffic or not.
    required:
      - id
      - config
      - running

  AnalyzerConfig:
    type: object
    description: >
      Analyzer configuration; the configuration specifies what traffic
      is collected by the analyzer and what results are calculated.
    properties:
      source_type:
        type: string
        description: >
          Specifies whether the source_id refers to a port or analyzer
          identifer.
        enum:
          - port
          - interface
      source_id:
          type: string
          description: >
            Specifies the unique port or interface identifier for this
            analyzer.
      filter:
        type: string
        description: >
          Berkley Packet Filter (BPF) rule that matches input frames for this
          analyzer to count.  An empty rule, the default, matches all frames.
      results:
        type: array
        description: >
          List of result sets the analyzer should produce for stateless test
          traffic that matches the input filter criteria.
        items:
          type: string
          enum:
            - advanced
            - basic
            - interarrival
            - interarrival_tdigest
            - jitter
            - jitter_tdigest
            - latency
            - latency_tdigest
            - prbs
        default: basic
        uniqueItems: true
    required:
      - method
      - filter
      - results

  AnalyzerResult:
    type: object
    description: Results collected by a running analyzer
    properties:
      id:
        type: string
        description: Unique analyzer result identifier
      active:
        type: boolean
        description: Indicates whether the result is currently being updated
      duration:
        $ref: "#/definitoion/DurationRemainder"
      stats:
        $ref: "#/definition/AnalyzerStreamStats"
      streams:
        type: array
        description: >
          List of unique stream ids included in stats. Individual stream
          statistics may be queried via the `rx-streams` endpoint.
        items:
          type: string
    required:
      - id
      - active
      - duration
      - stats
      - streams

  AnalyzerStreamStats:
    type: object
    description: Result statistics for received signature traffic
    properties:
      dropped:
        type: integer
        description: Number of frames expected but not yet received
        format: int64
      duplicate:
        type: integer
        description: Number of duplicate frames received
        format: int64
      interarrival_stats:
        $ref: "#/definition/AnalyzerTimingStats"
      interarrival_tdigest:
        $ref: "#/definition/AnalyzerTimingData"
      jitter_stats:
        $ref: "#/definition/AnalyzerTimingStats"
      jitter_tdigest:
        $ref: "#/definition/AnalyzerTimingData"
      latency_stats:
        $ref: "#/definition/AnalyzerTimingStats"
      latency_tdigest:
        $ref: "#/definition/AnalyzerTimingData"
      ordered:
        type: integer
        description: Number of frames received in sequential order
        format: int64
      prbs_errors:
        type: integer
        description: Total number of received PRBS bit errors
        format: int64
      prbs_octets:
        type: integer
        description: Total number of received PRBS octets
        format: int64
      rx_frames:
        type: integer
        description: Total number of received frames
        format: int64
      rx_octets:
        type: integer
        description: Total number of received octets
        format: int64
      rx_errors:
        type: integer
        description: Total number of frames received with errors
        format: int64
      reordered:
        type: integer
        description: Number of frames received in non-sequential order
        format: int64
      timestamp_first:
        type: string
        description: Timestamp of the first received frame
        format: date-time
      timestamp_last:
        type: string
        description: Timestamp of the last received frame
        format: date-time
    required:
      - rx_frames
      - rx_octets
      - rx_errors
      - timestamp_first
      - timestamp_last

  AnalyzerTimingStats:
    type: object
    description: Statistical properties of time based analyzer measurements
    properties:
      min:
        type: integer
        description: Minimum value
        format: int64
      max:
        type: integer
        description: Maximum value
        format: int64
      standard_deviation:
        type: integer
        description: Average delta of measured value from the mean
        format: int64
      total:
        type: integer
        description: Sum of all measured values
        format: int64
      units:
        type: string
        description: units to apply to time measurement values
        enum:
          - microseconds
          - nanoseconds
    required:
      - min
      - max
      - standard_deviation
      - total
      - units

  AnalyzerTimingData:
    type: object
    description: Raw t-digest analyzer data
    properties:
      data:
        type: array
        description: List of weight, value pairs comprising the t-digest data
        items:
          type: object
          description: t-digest node data
          properties:
            weight:
              type: integer
              description: Describes the weight of the associated value.
              format: int64
            value:
              type: integer
              description: >
                Describes the value of the associated weight. Uses the same
                units as the timing stats.
              format: int64
          required:
            - weight
            - value
    required:
      - data

  Capture:
    type: object
    description: >
      Packet capture object; captures write transmitted and/or received
      traffic to a file for detailed inspection.
    properties:
      id:
        type: string
        description: Unique capture identifier
      config:
        $ref: "#/definitions/CaptureConfig"
      running:
        type: boolean
        description: >
          Indicates whether this object is currently capturing traffic or not.
    required:
      - id
      - config
      - running

  CaptureConfig:
    type: object
    description: >
      Packet capture configuration; specifies what packets to capture and from where
      to capture them.
    properties:
      source_type:
        type: string
        description: >
          Specifies whether the source_id refers to a port or analyzer
          identifer.
        enum:
          - port
          - interface
      source_id:
          type: string
          description: >
            Specifies the unique port or or interface identifier for this
            analyzer.
      filter:
        type: string
        description: >
          Berkley Packet Filter (BPF) rule that matches frames to capture. An
          empty rule, the default, matches all frames.
      direction:
        type: string
        description: the direction to capture
        enum:
          - transmit
          - receive
          - both
        default: both
      truncate:
        type: integer
        description: Limits the number of octets captured per frame
        format: int32
        minimum: 1
    required:
      - source_type
      - source_id

  CaptureResult:
    type: object
    description: Results for a packet capture
    properties:
      id:
        type: string
        description: Unique capture result identifier
      file_id:
        type: string
        description: >
          Unique identifier for the file containing the raw capture data in
          the `capture-files` endpoint.
      active:
        type: boolean
        description: Indicates whether the result is currently being updated
      duration:
        $ref: "#/definition/DurationRemainder"
      packets:
        type: integer
        description: total number of captured packets
        format: int64
      timestamp_first:
        type: string
        description: Timestamp of the first captured frame
        format: date-time
      timestamp_last:
        type: string
        description: Timestamp of the last captured frame
        format: date-time
    required:
      - id
      - file_id
      - active
      - duration
      - packets
      - timestamp_first
      - timestamp_last

  CaptureFile:
    type: object
    description: A file containing captured packet data
    properties:
      id:
        type: string
        description: unique capture file identifier
      capture_id:
        type: string
        description: unique identifier of capture object that produced this file
      size:
        type: integer
        description: file length, in bytes
        format: int64

  DurationConfig:
    type: object
    description: Specifies how long a frame based object should run when started
    properties:
      mode:
        type: string
        description: Specifies how the duration is measured
        enum:
          - indefinite
          - seconds
          - frames
      duration:
        type: integer
        description: Specifies the duration value for definite durations
        format: int64
    required:
      - mode

  DurationRemainder:
    type: object
    description: Specifies how much type remains for an object to be active
    properties:
      mode:
        type: string
        description: Specifies how the duration is measured
        enum:
          - indefinite
          - seconds
          - frames
      duration:
        type: integer
        description: Specifies the remaining duration for definite durations
        format: int64
    required:
      - mode

  FrameLength:
    type: object
    description: Specifies length of stateless test traffic
    properties:
      method:
        type: string
        description: frame length specification method
        enum:
          - fixed
          - sequence
          - list
      fixed:
        type: object
        description: Specifies fixed length frames
        properties:
          length:
            type: integer
            description: Fixed frame length
            format: int32
            minimum: 64
        required:
          - length
      sequence:
        type: object
        description: Specifies a sequence of frame lengths
        properties:
          count:
            type: integer
            description: The number of different frame lengths
            format: int32
            minimum: 1
          start:
            type: integer
            description: The first length in the sequence
            format: int32
            minimum: 64
          stop:
            type: integer
            description: The last length in the sequence
            format: int32
            minimum: 64
        required:
          - count
          - start
      list:
        type: object
        description: Specifies a list of frame lengths
        properties:
          lengths:
            type: array
            description: List of frame lengths
            items:
              type: integer
              format: int32
              minimum: 64
            minItems: 1
        required:
          - lengths
    required:
      - method

  FrameModifier:
    type: object
    description: Specifies how to modify frame data
    properties:
      offset:
        type: string
        description: >
          Header and field to modify. Use BPF syntax to specify offsets
      method:
        type: string
        description: Modifier method
        enum:
          - sequence
          - list
      sequence:
        type: object
        description: Specifies a sequence of values
        properties:
          count:
            type: integer
            description: The number of different frame lengths
            format: int32
            minimum: 1
          start:
            type: integer
            description: The first length in the sequence
            format: int32
            minimum: 64
          stop:
            type: integer
            description: The last length in the sequence
            format: int32
            minimum: 64
          skip:
            type: array
            description: List of values in the sequence to skip
            items:
              type: integer
              format: int32
        required:
          - count
          - start
      list:
        type: array
        description: List of modifier values
        items:
          type: string
          format: binary
        minItems: 1
      width:
        type: integer
        description: Number of octets affected by this modifier
        format: int32
      permute:
        type: boolean
        description: >
          Specifies whether to pseudo-randomly order the modifier values
    required:
      - offset
      - method
      - width

  FrameProtocolDefinition:
    type: object
    description: A protocol definition for stateless test traffic frames
    properties:
      method:
        type: string
        description: protocol definition type
        enum:
          - ethernet
          - ipv4
          - udp
          - signature
      ethernet:
        $ref: "#/definitions/FrameProtocolEthernet"
      ipv4:
        $ref: "#/definitions/FrameProtocolIpv4"
      udp:
        $ref: "#/definitions/FrameProtocolUdp"
      signature:
        $ref: "#/definitions/FrameProtocolSignature"
    required:
      - method

  FrameProtocolEthernet:
    type: object
    description: Defines an Ethernet header
    properties:
      source:
        type: string
        description: Ethernet source MAC
        format: binary
      destination:
        type: string
        description: Ethernet destination MAC
        format: binary
      ethertype:
        type: string
        description: Ethernet protocol type
        format: binary

  FrameProtocolIpv4:
    type: object
    definition: Defines an IPv4 Header
    properties:
      version:
        type: string
        description: IP header version
        format: binary
        default: 0x4
      header_length:
        type: string
        description: IP header length
        format: binary
        default: 0x5
      tos:
        type: string
        description: Type of Service field
        format: binary
        default: 0x00
      packet_length:
        type: string
        description: IP packet length (include payload)
        format: binary
      id:
        type: string
        description: Identification field
        format: binary
      flags:
        type: string
        description: IP header flags
        format: binary
        default: 0x0;
      fragment_offset:
        type: string
        description: IP fragment offset
        format: binary
        default: 0x0000
      ttl:
        type: string
        description: Time To Live field
        format: binary
        default: 0xff
      protocol:
        type: string
        description: Protocol field
        format: binary
      checksum:
        type: string
        description: IP checksum
        format: binary
      source:
        type: string
        description: IP source address
        format: binary
      destination:
        type: string
        description: IP destination address
        format: binary

  FrameProtocolSignature:
    type: object
    description: Specifies options for the Spirent signature field
    properties:
      prbs:
        type: boolean
        description: Fill payload with a pseudo-random bit sequence

  FrameProtocolUdp:
    type: object
    description: Defines a UDP header
    properties:
      source_port:
        type: string
        description: UDP source port
        format: binary
      destination_port:
        type: string
        description: UDP destination port
        format: binary
      length:
        type: string
        description: header plus payload length
        format: binary
      checksum:
        type: string
        description: UDP checksum
        format: binary

  Generator:
    type: object
    description: Stateless traffic generator
    properties:
      id:
        type: string
        description: Unique generator identifier
      config:
        $ref: "#/definitions/GeneratorConfig"
      running:
        type: boolean
        description: >
          Indicates whether this object is currently generating stateless
          test traffic
    required:
      - id
      - config
      - running

  GeneratorConfig:
    type: object
    description: Stateless traffic generator configuration
    properties:
      source_type:
        type: string
        description: >
          Specifies whether the source_id refers to a port or analyzer
          identifer.
        enum:
          - port
          - interface
      source_id:
          type: string
          description: >
            Specifies the unique port or interface identifier for this
            generator to use as its source.
      traffic:
        type: array
        description: List of traffic definitions
        items:
          type: object
          description: traffic sequences with possible repeats
          properties:
            definition:
              $ref: "#/definitions/GeneratorTrafficDefinition"
            repeat:
              type: integer
              description: number of times to repeat this sequence
              format: int32
              minimum: 0
              default: 0
          required:
            - definition
            - repeat
        minItems: 1
    required:
      - source_type
      - source_id
      - traffic

  GeneratorFramesDescriptor:
    type: object
    description: Defines a set of streams for the stateless traffic generator
    properties:
definitions:
        type: array
        description: >
          Ordered list of frame header definitions. Frames are constructed
          according to the sequence of header definitions.
        items:
          $ref: "#/definitions/FrameDefinition"
        minItems: 1
      modifiers:
        type: array
        description: List of frame modifiers
        items:
          $ref: "#/definitions/FrameModifier"
      length:
        $ref: "#/definitions/FrameLength"
      scalar:
        type: integer
        description: relative weight of this frame sequence
        format: int32
        minimum: 1
    required:
      - definitions
      - length
      - scalar

  GeneratorLoad:
    type: object
    description: Describes the traffic load of a stateless traffic generator
    properties:
      burst:
        type: integer
        description: >
          Tells the generator how many frames to transmit as part of an atomic
          transmit operations. Larger burst sizes are more efficient.
        format: int32
        default: 1
        minimum: 1
        maximum: 32
      rate:
        type: integer
        description: The transmit rate
        format: int64
      units:
        type: string
        description: The transmit rate units
        enum:
          - frames
          - octets
    required:
      - rate
      - units

  GeneratorResult:
    type: object
    description: Results collected by a running generator
    properties:
      id:
        type: string
        description: Unique generator result identifer
      active:
        type: boolean
        description: Indicates whether the result is currently being updated
      duration:
        $ref: "#/definitoion/DurationRemainder"
      stats:
        $ref: "#/definition/GeneratorStreamStats"
      streams:
        type: array
        description: >
          List of unique stream ids included in stats. Individual stream
          statistics may be queried via the `tx-streams` endpoint.
        items:
          type: string
    required:
      - id
      - active
      - duration
      - stats
      - streams

  GeneratorStreamStats:
    type: object
    description: Stateless traffic generator statistics
    properties:
      errors:
        type: integer
        description: The number of frames not transmitted due to errors
        format: int64
      frames_actual:
        type: integer
        description: The total number of frames that have been transmitted
        format: int64
      frames_intended:
        type: integer
        description: The total number of frames that should have been transmitted
        format: int64
      octets_actual:
        type: integer
        description: The total number of octets that have been transmitted
        format: int64
      octets_intended:
        type: integer
        description: The total number of octets that should have been transmitted
        format: int64
      timestamp_first:
        type: string
        description: The timestamp of the first transmitted frame
        format: date-time
      timestamp_last:
        type: string
        description: The timestamp of the last transmitted frame
        format: date-time
    required:
      - errors
      - frames_actual
      - frames_intended
      - octets_actual
      - octets_intended
      - timestamp_first
      - timestamp_last

  GeneratorTrafficDefinition:
    type: object
    description: Describes a sequence of traffic for a generator to transmit
    properties:
      descriptors:
        type: array
        description: >
          A list of frame definitions with modifiers that describe all frames
          to send as part of this traffic definition.
        items:
          $ref: "#/definitions/GeneratorFrameDefinition"
        minItems: 1
      load:
        $ref: "#/definitions/GeneratorLoad"
      order:
        type: string
        description: >
          Tells the generator how to sequence multiple frame definitions. Only
          needed if more than one frame descriptor is present.
        enum:
          - round-robin
          - sequential
    required:
      - descriptors
      - load

  Interface:
    type: object
    description: Network interface
    properties:
      id:
        type: string
        description: Unique interface identifier
      port_id:
        type: string
        description: Port identifier
      config:
        type: object
        description: Interface configuration
        properties:
          protocols:
            type: array
            description: >
              A stack of protocol configurations, beginning with the outermost
              protocol (i.e. closest to the physical port)
            items:
              $ref: "#/definitions/InterfaceProtocolConfig"
            minItems: 1
        required:
          - protocols
      stats:
        $ref: "#/definitions/InterfaceStats"
    required:
      - id
      - port_id
      - config
      - stats

  InterfaceProtocolConfig:
    type: object
    description: Network interface protocol configuration
    properties:
      eth:
        type: object
        description: Ethernet protocol configuration
        properties:
          mac_address:
            type: string
            description: MAC address
        required:
          - mac_address
      ipv4:
        type: object
        description: IPv4 protocol configuration
        properties:
          method:
            type: string
            description: Configuration method
            enum:
              - static
              - dhcp
          static:
            type: object
            description: Static configuration parameters
            properties:
              address:
                type: string
                description: IP address
              prefix_length:
                type: integer
                description: Prefix length
                format: int32
              gateway:
                type: string
                description: Default gateway
            required:
              - address
              - prefix_length
          dhcp:
            type: object
            description: DHCP configuration parameters
            properties:
              hostname:
                type: string
                description: Hostname to be requested
              client:
                type: string
                description: Client identifier
        required:
          - method

  InterfaceStats:
    type: object
    description: Per-interface statistics
    properties:
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_bytes:
        type: integer
        description: Received bytes
        format: int64
      tx_bytes:
        type: integer
        description: Transmitted bytes
        format: int64
      rx_errors:
        type: integer
        description: Receive-side errors
        format: int64
      tx_errors:
        type: integer
        description: Transmit-side errors
        format: int64
    required:
      - rx_packets
      - tx_packets
      - rx_bytes
      - tx_bytes
      - rx_errors
      - tx_errors

  Module:
    type: object
    description: A test module that has been statically linked or dynamically loaded into the process
    properties:
      id:
        type: string
        description: Unique module identifier
        readOnly: true
      description:
        type: string
        description: Description of module functionality
        readOnly: true
      version:
        $ref: "#/definitions/ModuleVersion"
      linkage:
        type: string
        description: Linkage type
        readOnly: true
        enum:
          - static
          - dynamic
      path:
        type: string
        description: Path to module binary (dynamically-loaded modules only).
        readOnly: true
    required:
      - id
      - description
      - version
      - linkage

  ModuleVersion:
    type: object
    description: Module version information
    properties:
      version:
        type: integer
        description: Module version number
        format: int32
        readOnly: true
      build_number:
        type: string
        description: Module build number
        readOnly: true
      build_date:
        type: string
        description: Module build date
        format: date-time
        readOnly: true
      source_commit:
        type: string
        description: Module version control revision
        readOnly: true
    required:
      - version

  Port:
    type: object
    description: Physical port or port-equivalent (e.g. bonded ports)
    properties:
      id:
        type: string
        description: Unique port identifier
      kind:
        type: string
        description: Port kind
        enum:
          - dpdk
          - host
          - bond
      config:
        $ref: "#/definitions/PortConfig"
      status:
        $ref: "#/definitions/PortStatus"
      stats:
        $ref: "#/definitions/PortStats"
    required:
      - id
      - kind
      - config
      - status
      - stats

  PortConfig:
    type: object
    description: Port configuration
    properties:
      dpdk:
        type: object
        description: DPDK-specific configuration information
        properties:
          auto_negotiation:
            type: boolean
            description: Enable link auto-negotiation
          speed:
            type: integer
            description: Manually-configured port speed (in Mbps)
            format: int64
          duplex:
            type: string
            description: Manually-configured port duplex
            enum:
              - full
              - half
        required:
          - auto_negotiation
      #host:
      bond:
        type: object
        description: Bond-specific configuration information
        properties:
          mode:
            type: string
            description: Port bonding mode
            enum:
              - lag_802_3_ad
          ports:
            type: array
            description: Unique identifiers of bonded ports
            items:
              type: string
            minItems: 1
        required:
          - mode
          - ports

  PortStats:
    type: object
    description: Port statistics
    properties:
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_bytes:
        type: integer
        description: Received bytes
        format: int64
      tx_bytes:
        type: integer
        description: Transmitted bytes
        format: int64
      rx_errors:
        type: integer
        description: Receive-side errors
        format: int64
      tx_errors:
        type: integer
        description: Transmit-side errors
        format: int64
    required:
      - rx_packets
      - tx_packets
      - rx_bytes
      - tx_bytes
      - rx_errors
      - tx_errors

  PortStatus:
    type: object
    description: Port status
    properties:
      link:
        type: string
        description: Link status
        enum:
          - up
          - down
          - unknown
      speed:
        type: integer
        description: Port speed (in Mbps)
        format: int64
      duplex:
        type: string
        description: Port duplex
        enum:
          - full
          - half
          - unknown
    required:
      - link
      - speed
      - duplex

  RxStream:
    type: object
    description: A received signature traffic stream
    properties:
      id:
        type: string
        description: Unique stateless received stream identifier
      analyzer_id:
        type: string
        description: Unique analyzer identifier that reported this stream
      port_id:
        type: string
        description: Ingress port id
      interface_id:
        type: string
        description: Ingress interface id
      stream_id:
        type: integer
        description: Spirent signature stream id
        format: int64
      stats:
        $ref: "#/definitions/AnalyzerStreamStats"
    required:
      - id
      - analyzer_id
      - port_id
      - interface_id
      - stream_id
      - stats

  Stack:
    type: object
    description: A TCP/IP stack instance
    properties:
      id:
        type: string
        description: Unique stack identifier
      stats:
        $ref: "#/definitions/StackStats"
    required:
      - id
      - stats

  StackElementStats:
    type: object
    description: Stack element statistics
    properties:
      used:
        type: integer
        description: Used (elements)
        format: int32
      max:
        type: integer
        description: Maximum (elements)
        format: int32
      errors:
        type: integer
        description: Errors (count)
        format: int32
    required:
      - used
      - max
      - errors

  StackMemoryStats:
    type: object
    description: Stack memory statistics
    properties:
      name:
        type: string
        description: Pool name
      available:
        type: integer
        description: Available (bytes free)
        format: int64
      used:
        type: integer
        description: Used (bytes allocated)
        format: int64
      max:
        type: integer
        description: Maximum (bytes allocated)
        format: int64
      errors:
        type: integer
        description: Errors (count)
        format: int64
      illegal:
        type: integer
        description: Illegal operations (count)
        format: int64
    required:
      - name
      - available
      - used
      - max
      - errors
      - illegal

  StackProtocolStats:
    type: object
    description: Stack per-protocol statistics
    properties:
      tx_packets:
        type: integer
        description: Transmitted packets
        format: int64
      rx_packets:
        type: integer
        description: Received packets
        format: int64
      forwarded_packets:
        type: integer
        description: Forwarded packets
        format: int64
      dropped_packets:
        type: integer
        description: Dropped packets
        format: int64
      checksum_errors:
        type: integer
        description: Checksum errors
        format: int64
      length_errors:
        type: integer
        description: Invalid length errors
        format: int64
      memory_errors:
        type: integer
        description: Out of memory errors
        format: int64
      routing_errors:
        type: integer
        description: Routing errors
        format: int64
      protocol_errors:
        type: integer
        description: Protocol error
        format: int64
      option_errors:
        type: integer
        description: Errors in options
        format: int64
      misc_errors:
        type: integer
        description: Miscellaneous errors
        format: int64
      cache_hits:
        type: integer
        description: Cache hits
        format: int64
    required:
      - tx_packets
      - rx_packets
      - forwarded_packets
      - dropped_packets
      - checksum_errors
      - length_errors
      - memory_errors
      - routing_errors
      - protocol_errors
      - option_errors
      - misc_errors
      - cache_hits

  StackStats:
    type: object
    description: Stack statistics
    properties:
      arp:
        $ref: "#/definitions/StackProtocolStats"
      ipv4:
        $ref: "#/definitions/StackProtocolStats"
      ipv4_frag:
        $ref: "#/definitions/StackProtocolStats"
      icmpv4:
        $ref: "#/definitions/StackProtocolStats"
      igmp:
        $ref: "#/definitions/StackProtocolStats"
      nd:
        $ref: "#/definitions/StackProtocolStats"
      ipv6:
        $ref: "#/definitions/StackProtocolStats"
      ipv6_frag:
        $ref: "#/definitions/StackProtocolStats"
      icmpv6:
        $ref: "#/definitions/StackProtocolStats"
      mld:
        $ref: "#/definitions/StackProtocolStats"
      udp:
        $ref: "#/definitions/StackProtocolStats"
      tcp:
        $ref: "#/definitions/StackProtocolStats"
      heap:
        $ref: "#/definitions/StackMemoryStats"
      pools:
        type: array
        items:
          $ref: "#/definitions/StackMemoryStats"
      sems:
        $ref: "#/definitions/StackElementStats"
      mutexes:
        $ref: "#/definitions/StackElementStats"
      mboxes:
        $ref: "#/definitions/StackElementStats"
    required:
      - arp
      - ipv4
      - ipv4_frag
      - icmpv4
      - igmp
      - nd
      - ipv6
      - ipv6_frag
      - icmpv6
      - mld
      - udp
      - tcp
      - heap
      - pools
      - sems
      - mutexes
      - mboxes

  TxStream:
    type: object
    description: A transmitted stateless traffic stream
    properties:
      id:
        type: string
        description: Unique stateless transmit stream identifier
      generator_id:
        type: string
        description: Unique generator identifier that generated this stream
      stream_id:
        type: integer
        description: Spirent signature stream id
        format: int64
      stats:
        $ref: "#/definition/GeneratorStreamStats"
    required:
      - id
      - generator_id
      - stream_id
      - stats
