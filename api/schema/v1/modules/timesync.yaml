parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

paths:
  /time-counters:
    get:
      operationId: ListTimeCounters
      tags:
        - TimeSync
      summary: List time counters
      description: |
        The `time-counters` endpoint returns all local time counters
        that are available for measuring the passage of time.  This
        list is for informational purposes only.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeCounter"

  /time-counters/{id}:
    get:
      operationId: GetTimeCounter
      tags:
        - TimeSync
      summary: Get a time counter
      description: Returns a time counter, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeCounter"

  /time-keeper:
    get:
      operationId: GetTimeKeeper
      tags:
        - TimeSync
      summary: Get a time keeper.
      description: Returns the system time keeper, aka clock.
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeKeeper"

  /time-sources:
    get:
      operationId: ListTimeSources
      tags:
        - TimeSync
      summary: List reference clocks
      description: |
        The `time-sources` endpoint returns all time sources
        that are used for syncing the local time.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeSource"
    post:
      operationId: CreateTimeSource
      tags:
        - TimeSync
      summary: Register a time source for time syncing.
      description: |
        Registers a new time source for time syncing. Time sources are
        immutable.
      parameters:
        - name: timesource
          in: body
          description: New time source
          required: true
          schema:
            $ref: "#/definitions/TimeSource"
      responses:
        201:
          description: Success
          schema:
            $ref: "#/definitions/TimeSource"

  /time-sources/{id}:
    get:
      operationId: GetTimeSource
      tags:
        - TimeSync
      summary: Get a time source
      description: Get a time source, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TimeSource"
    delete:
      operationId: DeleteTimeSource
      tags:
        - TimeSync
      summary: Delete a time source
      description: Deletes an existing time source. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

definitions:
  TimeCounter:
    type: object
    description: A source of clock ticks
    properties:
      id:
        type: string
        description: Unique time counter identifier
      name:
        type: string
        description: Time counter name
      frequency:
        type: integer
        description: Tick rate of the counter, in Hz.
        format: int64
      priority:
        type: integer
        description: |
          Priority determines which counter to use in situations where
          there are multiple counters available (higher number = higher priority).
          Priority is always positive.
        format: int32
    required:
      - id
      - name
      - frequency
      - priority

  TimeKeeperState:
    type: object
    description: TimeKeeper internal state information
    properties:
      frequency:
        type: number
        description: |
          The time counter frequency as measured by the interval between the
          two best timestamp exchanges with the time source over the past two
          hours, in Hz.
        format: int64
      frequency_error:
        type: number
        description: The estimated error of the time counter frequency measurement, in Hz.
        format: int64
      local_frequency:
        type: number
        description: |
          The time counter frequency as measured by the interval between the
          two best timestamp exchanges with the time source over the past hour,
          in Hz. This value is used to help determine time stamp error due to
          time counter frequency drift.
        format: int64
      local_frequency_error:
        type: number
        description: The estimated error of the local time counter frequency measurement, in Hz.
        format: int64
      offset:
        type: number
        description: |
          The offset applied to time counter derived timestamp values,
          in seconds.  This value comes from the system host clock.
        format: double
      synced:
        type: boolean
        description: |
          The time keeper is considered to be synced to the time source if a clock
          offset, theta, has been calculated and applied within the past 20 minutes.
      theta:
        type: number
        description: |
          The calculated correction to apply to the offset, based on the
          measured time counter frequency and time source timestamps.
        format: double
    required:
      - offset
      - synced

  TimeKeeperStats:
    type: object
    description: TimeKeeper statistics
    properties:
      frequency_accept:
        type: number
        description: The number of times the frequency calculation has been updated.
        format: int64
      frequency_reject:
        type: number
        description: |
          The number of times the frequency calculation has been rejected due
          to an excessive delta between old and new values.
        format: int64
      local_frequency_accept:
        type: number
        description: The number of times the local frequency calculation has been updated.
        format: int64
      local_frequency_reject:
        type: number
        description: |
          The number of times the local frequency calculation has been rejected
          due to an excessive delta between old and new values.
        format: int64
      round_trip_times:
        type: object
        description: |
          The round trip time measures the total elapsed time to make a timestamp
          exchange with the remote time source.  The TimeKeeper stores RTT data so
          that the least delayed clock exchanges can be given extra weight when
          calculating the current clock offset.
        properties:
          avg:
            type: number
            description: the average round trip time, in seconds.
            format: double
          max:
            type: number
            description: The maximum round trip time, in seconds.
            format: double
          min:
            type: number
            description: The minimum round trip time, in seconds.
            format: double
          size:
            type: number
            description: The number of round trip times in the data set.
            format: int64
        required:
          - size
      theta_accept:
        type: number
        description: The number of times the theta calculation has been updated.
        format: int64
      theta_reject:
        type: number
        description: |
          Then umber of times the theta calculation has been rejected due to
          excessive delta between old and new values.
        format: int64
      timestamps:
        type: number
        description: |
          The number of timestamps in the current working set of timestamps.
          Old timestamps are dropped from the history of timestamps as they
          become irrelevant.
        format: int64
    required:
      - frequency_accept
      - frequency_reject
      - local_frequency_accept
      - local_frequency_reject
      - round_trip_times
      - theta_accept
      - theta_reject
      - timestamps

  TimeKeeper:
    type: object
    description: |
      A combination of a time source and a time counter used to measure
      the passage of time, aka a clock
    properties:
      state:
        $ref: "#/definitions/TimeKeeperState"
      stats:
        $ref: "#/definitions/TimeKeeperStats"
      time:
        type: string
        description: The current time and date in ISO8601 format
        format: date-time
      time_counter_id:
        type: string
        description: time counter used for measuring time intervals
      time_source_id:
        type: string
        description: time source used for wall-clock synchronization
    required:
      - state
      - stats
      - time
      - time_counter_id
      - time_source_id

  TimeSourceConfig:
    type: object
    description: time source configuration
    properties:
      ntp:
        type: object
        description: Network Time Protocol Server
        properties:
          hostname:
            type: string
            description: network hostname or address for server
          port:
            type: string
            default: "ntp"
            description: service name or port for server
        required:
          - hostname

  TimeSourceStats:
    type: object
    description: time source statistics
    properties:
      ntp:
        type: object
        description: NTP statistics
        properties:
          rx_packets:
            type: integer
            description: Received packets
            format: int64
          tx_packets:
            type: integer
            description: Transmitted packets
            format: int64
          stratum:
            type: integer
            description: |
              Time source distance from a NTP reference clock, in network hops.
            format: int32
        required:
          - rx_packets
          - tx_packets

  TimeSource:
    type: object
    description: A reference time source
    properties:
      id:
        type: string
        description: Unique time source identifier
      kind:
        type: string
        description: time source kind
        enum:
          - ntp
      config:
        $ref: "#/definitions/TimeSourceConfig"
      stats:
        $ref: "#/definitions/TimeSourceStats"
    required:
      - id
      - kind
      - config
      - stats
