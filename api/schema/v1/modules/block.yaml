parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

paths:
  /block-devices:
    get:
      operationId: ListBlockDevices
      tags:
        - BlockGenerator
      summary: List block devices
      description: The `block-devices` endpoint returns all block devices that are eligible as load generation targets.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockDevice"

  /block-devices/{id}:
    get:
      operationId: GetBlockDevice
      tags:
        - BlockGenerator
      summary: Get a block device
      description: Returns a block device, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BlockDevice"

  /block-files:
    get:
      operationId: ListBlockFiles
      tags:
        - BlockGenerator
      summary: List block files
      description: The `block-files` endpoint returns all block files that are eligible as load generation targets.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockFile"
    post:
      operationId: CreateBlockFile
      tags:
        - BlockGenerator
      summary: Create a block file
      description: Create a new block file.
      parameters:
        - name: file
          in: body
          description: New block file
          required: true
          schema:
            $ref: "#/definitions/BlockFile"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI of created block file
              type: string
          schema:
            $ref: "#/definitions/BlockFile"

  /block-files/{id}:
    get:
      operationId: GetBlockFile
      tags:
        - BlockGenerator
      summary: Get a block file
      description: Returns a block file, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BlockFile"
    delete:
      operationId: DeleteBlockFile
      tags:
        - BlockGenerator
      summary: Delete a block file
      description: Deletes an existing block file. If the file is used by generator it cannot be deleted. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /block-files/x/bulk-create:
    post:
      operationId: BulkCreateBlockFiles
      tags:
        - BlockGenerator
      summary: Bulk create block files
      description: |
        Create multiple block files. Requests are processed in an
        all-or-nothing manner, i.e. a single block file creation failure
        causes all creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreateBlockFilesRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of block files
                items:
                  $ref: "#/definitions/BlockFile"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: array
            description: List of created block files
            items:
              $ref: "#/definitions/BlockFile"
            minItems: 1

  /block-files/x/bulk-delete:
    post:
      operationId: BulkDeleteBlockFiles
      tags:
        - BlockGenerator
      summary: Bulk delete block files
      description: |
        Delete multiple block files in a best-effort manner. Non-existant block file ids
        do not cause errors. If the file is used by generator it cannot be deleted. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeleteBlockFilesRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of block file ids
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /block-generators:
    get:
      operationId: ListBlockGenerators
      tags:
        - BlockGenerator
      summary: List block generators
      description: The `block-generators` endpoint returns all of the configured block generators.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockGenerator"
    post:
      operationId: CreateBlockGenerator
      tags:
        - BlockGenerator
      summary: Create a block generator
      description: Create a new block generator
      parameters:
        - name: generator
          in: body
          description: New block generator
          required: true
          schema:
            $ref: "#/definitions/BlockGenerator"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI of created block generator
              type: string
          schema:
            $ref: "#/definitions/BlockGenerator"

  /block-generators/{id}:
    get:
      operationId: GetBlockGenerator
      tags:
        - BlockGenerator
      summary: Get a block generator
      description: Returns a block generator, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BlockGenerator"
    delete:
      operationId: DeleteBlockGenerator
      tags:
        - BlockGenerator
      summary: Delete a block generator
      description: Deletes an existing block generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /block-generators/x/bulk-create:
    post:
      operationId: BulkCreateBlockGenerators
      tags:
        - BlockGenerator
      summary: Bulk create block generators
      description: |
        Create multiple block generators. Requests are processed in an
        all-or-nothing manner, i.e. a single block generator creation failure
        causes all creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreateBlockGeneratorsRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of block generators
                items:
                  $ref: "#/definitions/BlockGenerator"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: array
            description: List of created block generators
            items:
              $ref: "#/definitions/BlockGenerator"

  /block-generators/x/bulk-delete:
    post:
      operationId: BulkDeleteBlockGenerators
      tags:
        - BlockGenerator
      summary: Bulk delete block generators
      description: |
        Delete multiple block generators in a best-effort manner. Non-existant block generators ids
        do not cause errors. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeleteBlockGeneratorsRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of block generator ids
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /block-generators/{id}/start:
    post:
      operationId: StartBlockGenerator
      tags:
        - BlockGenerator
      summary: Start a block generator
      description: Start an existing block generator.
      parameters:
        - $ref: "#/parameters/id"
        - $ref: "./modules/dynamic.yaml#/parameters/dynamic_results"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI of created block generator result
              type: string
          schema:
            $ref: "#/definitions/BlockGeneratorResult"

  /block-generators/{id}/stop:
    post:
      operationId: StopBlockGenerator
      tags:
        - BlockGenerator
      summary: Stop a block generator
      description: Stop a running block generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /block-generators/x/bulk-start:
    post:
      operationId: BulkStartBlockGenerators
      tags:
        - BlockGenerator
      summary: Tell multiple block generators to start
      description: Start multiple block generators.
      parameters:
        - name: bulk_start
          in: body
          description: Bulk start
          required: true
          schema:
            type: object
            title: BulkStartBlockGeneratorsRequest
            description: Parameters for the bulk start operation
            properties:
              ids:
                type: array
                description: List of block generator identifiers
                items:
                  type: string
                minItems: 1
              dynamic_results:
                $ref: "./dynamic.yaml#/definitions/DynamicResultsConfig"
            required:
              - ids
      responses:
        200:
          description: Success
          schema:
            type: array
            description: List started block generators results
            items:
              $ref: "#/definitions/BlockGeneratorResult"

  /block-generators/x/bulk-stop:
    post:
      operationId: BulkStopBlockGenerators
      tags:
        - BlockGenerator
      summary: Bulk stop block generators
      description: Best-effort stop multiple block generators. Non-existent block generator ids do not cause errors. Idempotent.
      parameters:
        - name: bulk_stop
          in: body
          description: Bulk stop
          required: true
          schema:
            type: object
            title: BulkStopBlockGeneratorsRequest
            description: Parameters for the bulk stop operation
            properties:
              ids:
                type: array
                description: List of block generator identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /block-generator-results:
    get:
      operationId: ListBlockGeneratorResults
      tags:
        - BlockGenerator
      summary: List block generator results
      description: The `block-generator-results` endpoint returns all of the results produced by running block generators.
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/BlockGeneratorResult"

  /block-generator-results/{id}:
    get:
      operationId: GetBlockGeneratorResult
      tags:
        - BlockGenerator
      summary: Get a result from a block generator
      description: Returns results from a block generator by result id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/BlockGeneratorResult"
    delete:
      operationId: DeleteBlockGeneratorResult
      tags:
        - BlockGenerator
      summary: Delete results from a block generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

definitions:
  BlockDevice:
    type: object
    description: Block device
    properties:
      id:
        type: string
        description: Unique device identifier
      path:
        type: string
        description: Resource pathname
      size:
        type: integer
        description: Resource size (in bytes)
        format: int64
      info:
        type: string
        description: Any info related to the current block device
      usable:
        type: boolean
        description: Indicates whether it is safe to use this device for block I/O load generation
      init_percent_complete:
        type: integer
        description: Percentage of initialization completed so far
        format: int32
      state:
        type: string
        description: State of resource initialization
        enum:
          - uninitialized
          - initializing
          - ready
    required:
      - id
      - path
      - size
      - info
      - usable
      - init_percent_complete
      - state

  BlockFile:
    type: object
    description: Block file
    properties:
      id:
        type: string
        description: Unique file identifier
      file_size:
        type: integer
        description: Size of test file (in bytes)
        format: int64
        minimum: 64
      init_percent_complete:
        type: integer
        description: Percentage of initialization completed so far
        format: int32
      path:
        type: string
        description: Resource pathname
      state:
        type: string
        description: State of resource
        enum:
          - none
          - init
          - ready
    required:
      - id
      - file_size
      - init_percent_complete
      - path
      - state

  BlockGenerator:
    type: object
    description: Block generator
    properties:
      id:
        type: string
        description: Block generator identifier
      config:
        $ref: "#/definitions/BlockGeneratorConfig"
      resource_id:
        type: string
        description: Unique device or file identifier
      running:
        type: boolean
        description: Indicates whether this generator is currently running.
    required:
      - id
      - config
      - resource_id
      - running

  BlockGeneratorConfig:
    type: object
    description: Block generator configuration
    properties:
      queue_depth:
        type: integer
        description: Number of simultaneous (asynchronous) operations
        minimum: 1
      reads_per_sec:
        type: integer
        description: Number of read operations to perform per second
        minimum: 0
      read_size:
        type: integer
        description: Number of bytes to use for each read operation
        minimum: 1
      writes_per_sec:
        type: integer
        description: Number of write operations to perform per second
        minimum: 0
      write_size:
        type: integer
        description: Number of bytes to use for each write operation
        minimum: 1
      ratio:
        type: object
        description: Relative amount of a mixed workload operations that should be performed. If value is not given, ratio is not limited.
        title: BlockGeneratorReadWriteRatio
        properties:
          writes:
            type: integer
            minimum: 1
          reads:
            type: integer
            minimum: 1
      pattern:
        type: string
        description: IO access pattern
        enum:
          - random
          - sequential
          - reverse
    required:
      - queue_depth
      - reads_per_sec
      - read_size
      - writes_per_sec
      - write_size
      - pattern

  BlockGeneratorResult:
    type: object
    description: Results collected by a running generator
    properties:
      id:
        type: string
        description: Unique generator result identifier
      generator_id:
        type: string
        description: Block generator identifier that generated this result
      active:
        type: boolean
        description: Indicates whether the result is currently being updated
      timestamp_first:
        type: string
        description: The ISO8601-formatted start time of the generator
        format: date-time
      timestamp_last:
        type: string
        description: The ISO8601-formatted date of the last result update
        format: date-time
      read:
        $ref: "#/definitions/BlockGeneratorStats"
      write:
        $ref: "#/definitions/BlockGeneratorStats"
      dynamic_results:
        $ref: "./dynamic.yaml#/definitions/DynamicResults"
    required:
      - id
      - active
      - timestamp_first
      - timestamp_last
      - read
      - write

  BlockGeneratorStats:
    type: object
    description: Block generator statistics
    properties:
      ops_target:
        type: integer
        description: The intended number of operations performed
        format: int64
      ops_actual:
        type: integer
        description: The actual number of operations performed
        format: int64
      bytes_target:
        type: integer
        description: The intended number of bytes read or written
        format: int64
      bytes_actual:
        type: integer
        description: The actual number of bytes read or written
        format: int64
      io_errors:
        type: integer
        description: The number of io_errors observed during reading or writing
        format: int64
      latency_total:
        type: integer
        description: The total amount of time required to perform all operations (in nanoseconds)
        format: int64
      latency_min:
        type: integer
        description: The minimum observed latency value (in nanoseconds)
        format: int64
      latency_max:
        type: integer
        description: The maximum observed latency value (in nanoseconds)
        format: int64
    required:
      - ops_target
      - ops_actual
      - bytes_target
      - bytes_actual
      - io_errors
      - latency_total
