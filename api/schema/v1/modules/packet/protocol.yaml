###
# This file is automatically generated by swagger_generator.py.  Do not edit!
###

definitions:
  PacketProtocolEthernet:
    description: Describes an Ethernet header
    properties:
      destination:
        description: Ethernet MAC destination address
        pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
        type: string
      ether_type:
        description: Ethernet ether type
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      source:
        description: Ethernet MAC source address
        pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
        type: string
    type: object
  PacketProtocolIpv4:
    description: Describes an IPv4 header
    properties:
      checksum:
        description: IPv4 checksum
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      destination:
        description: IPv4 destination address
        pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
        type: string
      dscp:
        description: IPv4 dscp
        format: int32
        maximum: 63
        minimum: 0
        type: integer
      ecn:
        description: IPv4 ecn
        enum:
        - non_ect
        - ect_0
        - ect_1
        - ce
        type: string
      flags:
        description: IPv4 flags
        items:
          enum:
          - evil_bit
          - dont_fragment
          - more_fragments
          type: string
        type: array
      fragment_offset:
        description: IPv4 fragment offset
        format: int32
        maximum: 65528
        minimum: 0
        multipleOf: 8
        type: integer
      header_length:
        description: IPv4 header length
        format: int32
        maximum: 60
        minimum: 0
        multipleOf: 4
        type: integer
      identification:
        description: IPv4 identification
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      protocol:
        description: IPv4 protocol
        format: int32
        maximum: 255
        minimum: 0
        type: integer
      source:
        description: IPv4 source address
        pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
        type: string
      time_to_live:
        description: IPv4 time to live
        format: int32
        maximum: 255
        minimum: 0
        type: integer
      total_length:
        description: IPv4 total length
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      version:
        description: IPv4 version
        format: int32
        maximum: 15
        minimum: 0
        type: integer
    type: object
  PacketProtocolIpv6:
    description: Describes an IPv6 header
    properties:
      destination:
        description: IPv6 destination address
        pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
        type: string
      flow_label:
        description: IPv6 flow label
        format: int32
        maximum: 1048575
        minimum: 0
        type: integer
      hop_limit:
        description: IPv6 hop limit
        format: int32
        maximum: 255
        minimum: 0
        type: integer
      next_header:
        description: IPv6 next header
        format: int32
        maximum: 255
        minimum: 0
        type: integer
      payload_length:
        description: IPv6 payload length
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      source:
        description: IPv6 source address
        pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
        type: string
      traffic_class:
        description: IPv6 traffic class
        format: int32
        maximum: 255
        minimum: 0
        type: integer
      version:
        description: IPv6 version
        format: int32
        maximum: 15
        minimum: 0
        type: integer
    type: object
  PacketProtocolMpls:
    description: Describes a MPLS header
    properties:
      bottom_of_stack:
        description: MPLS bottom of stack
        type: boolean
      label:
        description: MPLS label
        format: int32
        maximum: 1048575
        minimum: 0
        type: integer
      traffic_class:
        description: MPLS traffic class
        format: int32
        maximum: 7
        minimum: 0
        type: integer
      ttl:
        description: MPLS ttl
        format: int32
        maximum: 255
        minimum: 0
        type: integer
    type: object
  PacketProtocolTcp:
    description: Describes a tcp header
    properties:
      ack:
        description: tcp ack
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      checksum:
        description: tcp checksum
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      data_offset:
        description: tcp data offset
        format: int32
        maximum: 60
        minimum: 0
        multipleOf: 4
        type: integer
      destination:
        description: tcp destination
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      flags:
        description: tcp flags
        items:
          enum:
          - ns
          - cwr
          - ece
          - urg
          - ack
          - psh
          - rst
          - syn
          - fin
          type: string
        type: array
      reserved:
        description: tcp reserved
        format: int32
        maximum: 7
        minimum: 0
        type: integer
      sequence:
        description: tcp sequence
        format: int64
        maximum: 4294967295
        minimum: 0
        type: integer
      source:
        description: tcp source
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      urgent_pointer:
        description: tcp urgent pointer
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      window:
        description: tcp window
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
    type: object
  PacketProtocolUdp:
    description: Describes a udp header
    properties:
      checksum:
        description: udp checksum
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      destination:
        description: udp destination
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      length:
        description: udp length
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      source:
        description: udp source
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
    type: object
  PacketProtocolVlan:
    description: Describes a vlan header
    properties:
      drop_eligible:
        description: vlan drop eligible
        type: boolean
      ether_type:
        description: vlan ether type
        format: int32
        maximum: 65535
        minimum: 0
        type: integer
      id:
        description: vlan id
        format: int32
        maximum: 4095
        minimum: 0
        type: integer
      priority:
        description: vlan priority
        enum:
        - network_control
        - internetwork_control
        - voice
        - video
        - critical_app
        - excellent_effort
        - background
        - best_effort
        type: string
    type: object
