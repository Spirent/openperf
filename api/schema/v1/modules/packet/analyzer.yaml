parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

paths:
  /analyzers:
    get:
      operationId: ListPacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: List packet analyzers
      description: |
        The `analyzers` endpoint returns all packet analyzers that are
        configured to collect and report port and flow statistics.
      parameters:
        - name: source_id
          in: query
          description: Filter by source id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/PacketAnalyzer"
    post:
      operationId: CreatePacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Create a packet analyzer
      description: Create a new packet analyzer.
      parameters:
        - name: analyzer
          in: body
          description: New packet analyzer
          required: true
          schema:
            $ref: "#/definitions/PacketAnalyzer"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI of created analyzer
              type: string
          schema:
            $ref: "#/definitions/PacketAnalyzer"
    delete:
      operationId: DeletePacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: Delete all packet analyzers
      description: |
        Delete all inactive packet analyzers and their results. Idempotent.
      responses:
        204:
          description: No Content

  /analyzers/{id}:
    get:
      operationId: GetPacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Get a packet analyzer
      description: Return a packet analyzer by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/PacketAnalyzer"
    delete:
      operationId: DeletePacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Delete a packet analyzer
      description: |
        Delete a stopped packet analyzer by id. Also delete all results
        created by this analyzer. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /analyzers/{id}/reset:
    post:
      operationId: ResetPacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Reset a running analyzer.
      description: |
        Used to generate a new result for a running analyzer. This
        method effective resets all analyzer counters to zero. Note
        that the new analyzer result will not contain any flow results
        until packets are received after the reset event. Creates a
        new analyzer result on success.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI to created analyzer result object
              type: string
          schema:
            $ref: "#/definitions/PacketAnalyzerResult"

  /analyzers/{id}/start:
    post:
      operationId: StartPacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Start analyzing and collecting packet statistics.
      description: |
        Used to start a non-running analyzer. Creates a new analyzer
        result on success.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI to created analyzer result object
              type: string
          schema:
            $ref: "#/definitions/PacketAnalyzerResult"

  /analyzers/{id}/stop:
    post:
      operationId: StopPacketAnalyzer
      tags:
        - PacketAnalyzers
      summary: Stop analyzing and collecting packet statistics
      description: Use to halt a running analyzer. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /analyzers/x/bulk-create:
    post:
      operationId: BulkCreatePacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: Bulk create packet analyzers
      description: |
        Create multiple packet analyzers. Requests are processed in an
        all-or-nothing manner, i.e. a single analyzer creation failure
        causes all analyzer creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreatePacketAnalyzersRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of packet analyzers
                items:
                  $ref: "#/definitions/PacketAnalyzer"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkCreatePacketAnalyzersResponse
            properties:
              items:
                type: array
                description: List of packet analyzers
                items:
                  $ref: "#/definitions/PacketAnalyzer"
                minItems: 1
            required:
              - items

  /analyzers/x/bulk-delete:
    post:
      operationId: BulkDeletePacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: Bulk delete packet analyzers
      description: |
        Delete multiple packet analyzers in a best-effort manner. Analyzers
        can only be deleted when inactive. Active or Non-existant analyzer ids
        do not cause errors. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeletePacketAnalyzersRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of packet analyzers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /analyzers/x/bulk-start:
    post:
      operationId: BulkStartPacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: Bulk start packet analyzers
      description: Start multiple packet analyzers simultaneously
      parameters:
        - name: start
          in: body
          description: Bulk start
          required: true
          schema:
            type: object
            title: BulkStartPacketAnalyzersRequest
            description: Parameters for the bulk start operation
            properties:
              ids:
                type: array
                description: List of analyzer identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkStartPacketAnalyzersResponse
            properties:
              items:
                type: array
                description: List of analyzer results
                items:
                  $ref: "#/definitions/PacketAnalyzerResult"
                minItems: 1
            required:
              - items

  /analyzers/x/bulk-stop:
    post:
      operationId: BulkStopPacketAnalyzers
      tags:
        - PacketAnalyzers
      summary: Bulk stop packet analyzers
      description: Stop multiple packet analyzers simultaneously
      parameters:
        - name: stop
          in: body
          description: Bulk stop
          required: true
          schema:
            type: object
            title: BulkStopPacketAnalyzersRequest
            description: Parameters for the bulk stop operation
            properties:
              ids:
                type: array
                description: List of analyzer identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /analyzer-results:
    get:
      operationId: ListPacketAnalyzerResults
      tags:
        - PacketAnalyzers
      summary: List analyzer results
      description: |
        The `analyzer-results` endpoint returns all analyzer results created
        by analyzer instances.
      parameters:
        - name: analyzer_id
          in: query
          description: Filter by analyzer id
          required: false
          type: string
        - name: source_id
          in : query
          description: Filter by receive port or interface id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/PacketAnalyzerResult"
    delete:
      operationId: DeletePacketAnalyzerResults
      tags:
        - PacketAnalyzers
      summary: Delete all analyzer results
      description: Delete all inactive packet analyzer results
      responses:
        204:
          description: No Content

  /analyzer-results/{id}:
    get:
      operationId: GetPacketAnalyzerResult
      tags:
        - PacketAnalyzers
      summary: Get a packet analyzer result
      description: Returns results from a packet analyzer by result id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/PacketAnalyzerResult"
    delete:
      operationId: DeletePacketAnalyzerResult
      tags:
        - PacketAnalyzers
      summary: Delete a packet analyzer result
      description: |
        Delete an inactive packet analyzer result. Also deletes all child
        rx-flow objects. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /rx-flows:
    get:
      operationId: ListRxFlows
      tags:
        - PacketAnalyzers
      summary: List received packet flows
      description: |
        The `rx-flows` endpoint returns all packet flows that have been
        received by analyzer instances.
      parameters:
        - name: analyzer_id
          in: query
          description: Filter by receive analyzer id
          required: false
          type: string
        - name: source_id
          in: query
          description: Filter by receive port or interface id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/RxFlow"

  /rx-flows/{id}:
    get:
      operationId: GetRxFlow
      tags:
        - PacketAnalyzers
      summary: Get packet flow counters for a single flow
      description: Returns packet flow counters by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/RxFlow"

definitions:
  PacketAnalyzer:
    type: object
    description: |
      Packet analyzer; analyzers count received traffic and generate statistics
      using various analysis methods.
    properties:
      id:
        type: string
        description: Unique analyzer identifier
      source_id:
        type: string
        description: |
          Specifies the unique source of packets for this analyzer. This
          id may refer to either a port or an interface.
      active:
        type: boolean
        description: |
          Indicates whether this object is currently analyzing packets or not.
      config:
        $ref: "#/definitions/PacketAnalyzerConfig"
    required:
      - id
      - source_id
      - active
      - config

  PacketAnalyzerConfig:
    type: object
    description: |
      Packet analyzer configuration; the configuration specifies what packets
      are analyzed and what results are calculated.
    properties:
      filter:
        type: string
        description: |
          Berkley Packet Filter (BPF) rules that matches input packets for this
          analyzer to count. An empty rule, the default, matches all frames.
      protocol_counters:
        type: array
        description: |
          List of protocol counters to update per analyzer for received packets.
        items:
          type: string
          enum:
            - ethernet
            - ip
            - transport
            - tunnel
            - inner_ethernet
            - inner_ip
            - inner_transport
          uniqueItems: true
      flow_counters:
        type: array
        description: |
          List of results to generate per flow for received packets.
          Sequencing, latency, and jitter results require Spirent signatures
          in the received packets.
        items:
          type: string
          enum:
            - frame_count
            - frame_length
            - advanced_sequencing
            - interarrival_time
            - latency
            - jitter_ipdv
            - jitter_rfc
            - prbs
            - header
          default:
            - frame_count
          uniqueItems: true
    required:
      - protocol_counters
      - flow_counters

  PacketAnalyzerResult:
    type: object
    description: Results collected by a running packet analyzer
    properties:
      id:
        type: string
        description: Unique analyzer result identifier
      analyzer_id:
        type: string
        description: Unique analyzer identifier that generated this result
      active:
        type: boolean
        description: Indicates whether the result is currently receiving updates
      protocol_counters:
        $ref: "#/definitions/PacketAnalyzerProtocolCounters"
      flow_counters:
        $ref: "#/definitions/PacketAnalyzerFlowCounters"
      flows:
        type: array
        description: |
          List of unique flow ids included in stats. Individual flow
          statistics may be queried via the `rx-flows` endpoint.
        items:
          type: string
    required:
      - id
      - active
      - protocol_counters
      - flow_counters

  PacketAnalyzerProtocolCounters:
    type: object
    description: Result counters for protocols
    properties:
      ethernet:
        $ref: ./protocol_counters.yaml#/definitions/PacketEthernetProtocolCounters
      ip:
        $ref: ./protocol_counters.yaml#/definitions/PacketIpProtocolCounters
      transport:
        $ref: ./protocol_counters.yaml#/definitions/PacketTransportProtocolCounters
      tunnel:
        $ref: ./protocol_counters.yaml#/definitions/PacketTunnelProtocolCounters
      inner_ethernet:
        $ref: ./protocol_counters.yaml#/definitions/PacketInnerEthernetProtocolCounters
      inner_ip:
        $ref: ./protocol_counters.yaml#/definitions/PacketInnerIpProtocolCounters
      inner_transport:
        $ref: ./protocol_counters.yaml#/definitions/PacketInnerTransportProtocolCounters

  PacketAnalyzerFlowSummaryCounters:
    type: object
    description: Summary results for per-packet statistics
    properties:
      min:
        type: integer
        description: Minimum value
        format: int64
        minimum: 0
      max:
        type: integer
        description: Maximum value
        format: int64
        minimum: 0
      total:
        type: integer
        description: Sum of all received values
        format: int64
        minimum: 0
      std_dev:
        type: integer
        description: Standard deviation of received values
        format: int64
        minimum: 0
    required:
      - total

  PacketAnalyzerFlowCounters:
    type: object
    description: Result counters for flows
    properties:
      errors:
        type: object
        description: Error counters
        properties:
          fcs:
            type: integer
            description: Number of Frame Check Sequence errors
            format: int64
          ipv4_checksum:
            type: integer
            description: Number of IPv4 checksum errors
            format: int64
          tcp_checksum:
            type: integer
            description: Number of TCP checksum errors
            format: int64
          udp_checksum:
            type: integer
            description: Number of UDP checksum errors
            format: int64
        required:
          - fcs
          - ipv4_checksum
          - tcp_checksum
          - udp_checksum
      headers:
        type: array
        description: List of protocol headers
        items:
          $ref: "#/definitions/PacketAnalyzerFlowHeader"
        minItems: 1
      frame_length:
        type: object
        description: Frame length result counters
        properties:
          summary:
            $ref: "#/definitions/PacketAnalyzerFlowSummaryCounters"
          units:
            type: string
            description: Frame length result units
            enum:
              - octets
        required:
          - summary
          - units
      interarrival:
        type: object
        description: Inter-arrival time result counters
        properties:
          summary:
            $ref: "#/definitions/PacketAnalyzerFlowSummaryCounters"
          units:
            type: string
            description: Inter-arrival time measurement units
            enum:
              - nanoseconds
        required:
          - summary
          - units
      jitter_ipdv:
        type: object
        description: Jitter (RFC 3393) result counters
        properties:
          summary:
            $ref: "#/definitions/PacketAnalyzerFlowSummaryCounters"
          units:
            type: string
            description: Jitter time measurement units
            enum:
              - nanoseconds
        required:
          - summary
          - units
      jitter_rfc:
        type: object
        description: Jitter (RFC 4737) result counters
        properties:
          summary:
            $ref: "#/definitions/PacketAnalyzerFlowSummaryCounters"
          units:
            type: string
            description: Jitter time measurement units
            enum:
              - nanoseconds
        required:
          - summary
          - units
      latency:
        type: object
        description: Latency result counters
        properties:
          summary:
            $ref: "#/definitions/PacketAnalyzerFlowSummaryCounters"
          units:
            type: string
            description: Latency measurement units
            enum:
              - nanoseconds
        required:
          - summary
          - units
      prbs:
        type: object
        description: PRBS bit error results
        properties:
          bit_errors:
            type: integer
            description: Number of PRBS bit errors detected
            format: int64
            minimum: 0
          frame_errors:
            type: integer
            description: Number of packets with PRBS bit errors detected
            format: int64
            minimum: 0
          octets:
            type: integer
            description: Number of PRBS octets checked
            format: int64
            minimum: 0
        required:
          - frames
          - octets
          - bit_errors
      sequence:
        type: object
        description: Advanced Sequencing result counters
        properties:
          dropped:
            type: integer
            description: Number of packets expected but not yet received
            format: int64
            minimum: 0
          duplicate:
            type: integer
            description: Number of duplicate packets received
            format: int64
            minimum: 0
          late:
            type: integer
            description: Number of late packets received
            format: int64
            minimum: 0
          reordered:
            type: integer
            description: Number of reordered packets received
            format: int64
            minimum: 0
          in_order:
            type: integer
            description: Number of packets received in the expected sequence
            format: int64
            minimum: 0
          run_length:
            type: integer
            description: Number of packets received in sequence
            format: int64
            minimum: 0
        required:
          - dropped
          - duplicate
          - late
          - reordered
          - in_order
          - run_length
      frame_count:
        type: integer
        description: Number of received packets
        format: int64
        minimum: 0
      timestamp_first:
        type: string
        description: Timestamp of first received packet
        format: date-time
      timestamp_last:
        type: string
        description: Timestamp of last received packet
        format: date-time
    required:
      - frame_count
      - errors

  PacketAnalyzerFlowHeader:
    type: object
    description: A decoded protocol header
    properties:
      ethernet:
        $ref: ./protocol.yaml#/definitions/PacketProtocolEthernet
      ipv4:
        $ref: ./protocol.yaml#/definitions/PacketProtocolIpv4
      ipv6:
        $ref: ./protocol.yaml#/definitions/PacketProtocolIpv6
      mpls:
        $ref: ./protocol.yaml#/definitions/PacketProtocolMpls
      tcp:
        $ref: ./protocol.yaml#/definitions/PacketProtocolTcp
      udp:
        $ref: ./protocol.yaml#/definitions/PacketProtocolUdp
      vlan:
        $ref: ./protocol.yaml#/definitions/PacketProtocolVlan
      unknown:
        type: string
        description: Base64 encoded header

  RxFlow:
    type: object
    description: Counters for a flow of packets
    properties:
      id:
        type: string
        description: Unique received flow identifier
      analyzer_result_id:
        type: string
        description: Unique analyzer result identifier that observed this flow
      counters:
        $ref: "#/definitions/PacketAnalyzerFlowCounters"
    required:
      - id
      - analyzer_result_id
      - counters
