definitions:
  # The swagger/pistache code generator does not properly support type = string,
  # format = byte, so we have to use our own type for this.
  BinaryString:
    type: string
    description: A base64 encoded representation of binary data

  MacAddress:
    type: string
    description: Ethernet MAC address
    pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$

  Ipv4Address:
    type: string
    description: IPv4 Address
    pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$

  Ipv6Address:
    type: string
    description: IPv6 Address
    pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$

  TcpIpPort:
    type: integer
    description: TCP/IP port number
    format: int32
    default: 3357
    minimum: 0
    maximum: 65535

  DurationRemainder:
    type: object
    description: Specifies how much time remains for an object to be active
    properties:
      mode:
        type: string
        description: Specifies how the duration is measured
        enum:
          - indefinite
          - frames
          - seconds
      duration:
        type: integer
        description: Specifies the remaining duration for definite durations
        format: int64
        minimum: 0
    required:
      - mode

  PacketProtocolCustom:
    type: object
    description: Defines an arbitrary sequence of data
    properties:
      data:
        $ref: "#/definitions/BinaryString"
    required:
      - data

  PacketProtocolEthernet:
    type: object
    description: Defines an Ethernet header
    properties:
      source:
        $ref: "#/definitions/MacAddress"
      destination:
        $ref: "#/definitions/MacAddress"
      ethertype:
        type: integer
        description: Ethernet Ethertype
        format: int32
        minimum: 0
        maximum: 65535

  PacketProtocolIpv4:
    type: object
    definition: Defines an IPv4 header
    properties:
      version:
        type: integer
        description: IP header version
        format: int32
        default: 4
        minimum: 0
        maximum: 16
      header_length:
        type: integer
        description: IP header length
        format: int32
        default: 20
        minimum: 0
        maximum: 60
        multipleOf: 4
      tos:
        type: integer
        description: Type of Service field
        format: int32
        default: 0
        minimum: 0
        maximum: 255
      packet_length:
        type: integer
        description: IP packet length (include payload)
        format: int32
        minimum: 0
        maximum: 65535
      id:
        type: integer
        description: Identification field
        format: int32
        minimum: 0
        maximum: 65535
      flags:
        type: array
        description: IP header flags
        items:
          type: string
          enum:
            - evil_bit
            - dont_fragment
            - more_fragments
          uniqueItems: true
      fragment_offset:
        type: integer
        description: IP fragment offset
        default: 0
        format: int32
        minimum: 0
        maximum: 65528
        multipleOf: 8
      ttl:
        type: integer
        description: Time To Live field
        format: int32
        minimum: 0
        maximum: 255
      protocol:
        type: integer
        description: Protocol field
        format: int32
        minimum: 0
        maximum: 255
      checksum:
        type: integer
        description: IPv4 header checksum
        format: int32
        minimum: 0
        maximum: 65535
      source:
        $ref: "#/definitions/Ipv4Address"
      destination:
        $ref: "#/definitions/Ipv4Address"
    required:
      - destination

  PacketProtocolIpv6:
    type: object
    description: Defines an IPv6 header
    properties:
      version:
        type: integer
        description: IP header version
        format: int32
        default: 6
        minimum: 0
        maximum: 16
      traffic_class:
        type: integer
        description: IP traffic class field
        format: int32
        default: 0
        minimum: 0
        maximum: 255
      flow_label:
        type: integer
        description: IP flow label field
        format: int32
        default: 0
        minimum: 0
        maximum: 1048576
      payload_length:
        type: integer
        description: IP payload length
        format: int32
        minimum: 0
        maximum: 65535
      next_header:
        type: integer
        description: IP next header field
        format: int32
        minimum: 0
        maximum: 255
      hop_limit:
        type: integer
        description: IP hop limit field
        default: 0
        format: int32
        minimum: 0
        maximum: 255
      source:
        $ref: "#/definitions/Ipv6Address"
      destination:
        $ref: "#/definitions/Ipv6Address"
    required:
      - destination

  # The spirent_pga fills are limited at this point. Additional fill types TBD.
  PacketProtocolSpirentSignature:
    type: object
    description: Defines a Spirent test signature and optional payload
    properties:
      fill_type:
        type: string
        description: Specifies optional payload fill method
        default: "none"
        enum:
          - constant
          - decrement
          - increment
          - none
          - prbs
      fill_value:
        type: integer
        description: The base value to use for filling
        format: int32
        minimum: 0
        maximum: 255

  PacketProtocolTcp:
    type: object
    description: Defines a TCP header
    properties:
      source_port:
        $ref: "#/definitions/TcpIpPort"
      destination_port:
        $ref: "#/definitions/TcpIpPort"
      sequence_number:
        type: integer
        description: sequence number field
        format: int64
        minimum: 0
        maximum: 4294967295
      ack_number:
        type: integer
        description: ACK number field
        format: int64
        minimum: 0
        maximum: 4294967295
      data_offset:
        type: integer
        description: offset to data from the start of the TCP header
        format: int32
        minimum: 20
        maximum: 60
        multipleOf: 4
      flags:
        type: array
        description: TCP header flags
        items:
          type: string
          enum:
            - ns
            - cwr
            - ece
            - urg
            - ack
            - psh
            - rst
            - syn
            - fin
          uniqueItems: true
      window:
        type: integer
        description: sequence window field
        format: int32
        minimum: 2
        maximum: 65535
      checksum:
        type: integer
        description: checksum field
        format: int32
        minimum: 0
        maximum: 65535
      urgent_pointer:
        type: integer
        description: urgent pointer field
        format: int32
        minimum: 0
        maximum: 65535
    required:
      - source_port
      - destination_port

  PacketProtocolUdp:
    type: object
    description: Defines a UDP header
    properties:
      source_port:
        $ref: "#/definitions/TcpIpPort"
      destination_port:
        $ref: "#/definitions/TcpIpPort"
      length:
        type: integer
        description: header plus payload length
        format: int32
        minimum: 8
        maximum: 65535
      checksum:
        type: integer
        description: checksum field
        format: int32
        minimum: 0
        maximum: 65535
    required:
      - source_port
      - destination_port
