parameters:
  id:
    name: id
    in: path
    description: Unique resource identifier
    type: string
    format: string
    required: true

paths:
  /generators:
    get:
      operationId: ListGenerators
      tags:
        - PacketGenerators
      summary: List packet generators
      description: |
        The `generators` endpoint returns all packet generators that are
        configured to transmit test traffic.
      parameters:
        - name: target_id
          in: query
          description: Filter by target id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/PacketGenerator"
    post:
      operationId: CreateGenerator
      tags:
        - PacketGenerators
      summary: Create a new packet generator
      parameters:
        - name: generator
          in: body
          description: New packet generator
          required: true
          schema:
            $ref: "#/definitions/PacketGenerator"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI of created generator
              type: string
          schema:
            $ref: "#/definitions/PacketGenerator"
    delete:
      operationId: DeleteGenerators
      tags:
        - PacketGenerators
      summary: Delete all packet generators
      description: |
        Delete all inactive packet generators and their results. Idempotent.
      responses:
        204:
          description: No Content

  /generators/{id}:
    get:
      operationId: GetGenerator
      tags:
        - PacketGenerators
      summary: Get a packet generator
      description: Return a packet generator, by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/PacketGenerator"
    delete:
      operationId: DeleteGenerator
      tags:
        - PacketGenerators
      summary: Delete a packet generator
      description: |
        Delete a stopped packet generator by id. Also delete all results
        created by this generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /generators/{id}/start:
    post:
      operationId: StartGenerator
      tags:
        - PacketGenerators
      summary: Start generating packets
      description: |
        Used to start a non-running generator. Creates a new generator result
        upon success.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI to created generator result object
              type: string
          schema:
            $ref: "#/definitions/PacketGeneratorResult"

  /generators/{id}/stop:
    post:
      operationId: StopGenerator
      tags:
        - PacketGenerators
      summary: Stop generating packets.
      description: Use to halt a running generator. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /generators/x/bulk-create:
    post:
      operationId: BulkCreateGenerators
      tags:
        - PacketGenerators
      summary: Bulk create packet generators
      description: |
        Create multiple packet generators. Requests are processed in an
        all-or-nothing manner, i.e. a single generator creation failure
        causes all generator creations for this request to fail.
      parameters:
        - name: create
          in: body
          description: Bulk creation
          required: true
          schema:
            type: object
            title: BulkCreateGeneratorsRequest
            description: Parameters for the bulk create operation
            properties:
              items:
                type: array
                description: List of packet generators
                items:
                  $ref: "#/definitions/PacketGenerator"
                minItems: 1
            required:
              - items
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkCreateGeneratorsResponse
            properties:
              items:
                type: array
                description: List of packet generators
                items:
                  $ref: "#/definitions/PacketGenerator"
                minItems: 1
            required:
              - items

  /generators/x/bulk-delete:
    post:
      operationId: BulkDeleteGenerators
      tags:
        - PacketGenerators
      summary: Bulk delete packet generators
      description: |
        Delete multiple packet generators in a best-effort manner. Generators
        can only be deleted when inactive. Active or Non-existant generator ids
        do not cause errors. Idempotent.
      parameters:
        - name: delete
          in: body
          description: Bulk delete
          required: true
          schema:
            type: object
            title: BulkDeleteGeneratorsRequest
            description: Parameters for the bulk delete operation
            properties:
              ids:
                type: array
                description: List of packet generators
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /generators/x/bulk-start:
    post:
      operationId: BulkStartGenerators
      tags:
        - PacketGenerators
      summary: Bulk start packet generators
      description: Start multiple packet generators simultaneously
      parameters:
        - name: start
          in: body
          description: Bulk start
          required: true
          schema:
            type: object
            title: BulkStartGeneratorsRequest
            description: Parameters for the bulk start operation
            properties:
              ids:
                type: array
                description: List of packet generator identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        200:
          description: Success
          schema:
            type: object
            title: BulkStartGeneratorsResponse
            properties:
              items:
                type: array
                description: List of packet generator results
                items:
                  $ref: "#/definitions/PacketGeneratorResult"
                minItems: 1
            required:
              - items

  /generators/x/bulk-stop:
    post:
      operationId: BulkStopGenerators
      tags:
        - PacketGenerators
      summary: Bulk stop packet generators
      description: Stop multiple packet generators simultaneously
      parameters:
        - name: stop
          in: body
          description: Bulk stop
          required: true
          schema:
            type: object
            title: BulkStopGeneratorsRequest
            description: Parameters for the bulk stop operation
            properties:
              ids:
                type: array
                description: List of packet generator identifiers
                items:
                  type: string
                minItems: 1
            required:
              - ids
      responses:
        204:
          description: No Content

  /generators/x/toggle:
    post:
      operationId: ToggleGenerators
      tags:
        - PacketGenerators
      summary: Replace a running generator with a stopped generator
      description: |
        Atomically swap a running generator with an idle generator.
        Upon success, the idle generator will be in the run state and
        the previously running generator will be stopped.
      parameters:
        - name: toggle
          in: body
          description: Generator toggle
          required: true
          schema:
            type: object
            title: ToggleGeneratorsRequest
            description: Parameters for the toggle operation
            properties:
              replace:
                type: string
                description: The unique id of the running generator
              with:
                type: string
                description: The unique id of the stopped generator
            required:
              - replace
              - with
      responses:
        201:
          description: Created
          headers:
            Location:
              description: URI to created generator result object
              type: string
          schema:
            $ref: "#/definitions/PacketGeneratorResult"

  /generator-results:
    get:
      operationId: ListGeneratorResults
      tags:
        - PacketGenerators
      summary: List generator results
      description: |
        The `generator-results` endpoint returns all generator results created
        by generator instances.
      parameters:
        - name: generator_id
          in: query
          description: Filter by generator id
          required: false
          type: string
        - name: target_id
          in: query
          description: Filter by target port or interface id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/PacketGeneratorResult"
    delete:
      operationId: DeleteGeneratorResults
      tags:
        - PacketGenerators
      summary: Delete all generator results
      description: Delete all inactive generator results
      responses:
        204:
          description: No Content

  /generator-results/{id}:
    get:
      operationId: GetGeneratorResult
      tags:
        - PacketGenerators
      summary: Get a packet generator result
      description: Returns results from a packet generator by result id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/PacketGeneratorResult"
    delete:
      operationId: DeleteGeneratorResult
      tags:
        - PacketGenerators
      summary: Delete a packet generator result
      description: |
        Delete an inactive packet generator result. Also deletes all child
        tx-flow objects. Idempotent.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        204:
          description: No Content

  /tx-flows:
    get:
      operationId: ListTxFlows
      tags:
        - PacketGenerators
      summary: List packet generator transmit flows
      description: |
        The `tx-flows` endpoint returns all packet flows that are generated
        by packet generators.
      parameters:
        - name: generator_id
          in: query
          description: Filter by packet generator id
          required: false
          type: string
        - name: target_id
          in: query
          description: Filter by target port or interface id
          required: false
          type: string
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/TxFlow"

  /tx-flows/{id}:
    get:
      operationId: GetTxFlow
      tags:
        - PacketGenerators
      summary: Get a transmit packet flow
      description: Returns a transmit packet flow by id.
      parameters:
        - $ref: "#/parameters/id"
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/TxFlow"

definitions:
  PacketGenerator:
    type: object
    description: Packet generator
    properties:
      id:
        type: string
        description: Unique generator identifier
      target_id:
        type: string
        description: |
          Specifies the unique target for packets from this generator. This
          id may refer to either a port or an interface id.
      active:
        type: boolean
        description: |
          Indicates whether this object is currently generating packets or not.
      config:
        $ref: "#/definitions/PacketGeneratorConfig"
    required:
      - id
      - target_id
      - active
      - config

  PacketGeneratorConfig:
    type: object
    description: Packet generator configuration
    properties:
      duration:
        $ref: "#/definitions/TrafficDuration"
      flow_count:
        type: integer
        description: Specifies the total number of flows in all traffic definitions
        format: int64
        minimum: 1
      load:
        $ref: "#/definitions/TrafficLoad"
      order:
        type: string
        description: |
          Tells the generator how to sequence multiple traffic definitions. Only
          needed if more than one traffic definition is present.
        enum:
          - round-robin
          - sequential
      traffic:
        type: array
        description: List of traffic definitions
        items:
          $ref: "#/definitions/TrafficDefinition"
        minItems: 1
    required:
      - duration
      - load
      - traffic

  PacketGeneratorFlowCounters:
    type: object
    description: Packet generator statistics
    properties:
      errors:
        type: integer
        description: The number of packets not transmitted due to errors
        format: int64
        minimum: 0
      octets_actual:
        type: integer
        description: The total number of octets that have been transmitted
        format: int64
        minimum: 0
      octets_intended:
        type: integer
        description: The total number of octets that should have been transmitted
        format: int64
        minimum: 0
      packets_actual:
        type: integer
        description: The total number of packets that have been transmitted
        format: int64
        minimum: 0
      packets_intended:
        type: integer
        description: The total number of packets that should have been transmitted
        format: int64
        minimum: 0
      timestamp_first:
        type: string
        description: The timestamp of the first transmitted packet
        format: date-time
      timestamp_last:
        type: string
        description: The timestamp of the most recently transmitted packet
        format: date-time
    required:
      - errors
      - octets_actual
      - octets_intended
      - packets_actual
      - packets_intended

  PacketGeneratorResult:
    type: object
    description: Results produced by a packet generator
    properties:
      id:
        type: string
        description: Unique generator result identifier
      generator_id:
        type: string
        description: Unique generator identifier that produced this result
      active:
        type: boolean
        description: Indicates whether this result is currently being updated
      flow_counters:
        $ref: "#/definitions/PacketGeneratorFlowCounters"
      flows:
        type: array
        description: |
          List of unique flow ids included in stats. Individual flow
          statistics may be queried via the `tx-flows` endpoint.
        items:
          type: string
      remaining:
        $ref: ./common.yaml#/definitions/DurationRemainder
    required:
      - id
      - active
      - flow_counters
      - flows

  SpirentSignature:
    type: object
    description: Configures Spirent test signature
    properties:
      stream_id:
        type: integer
        description: |
          Stream IDs are created for each flow of the definition. This
          property specifies the ID to use for the first flow. Subsequent
          flows will use incremented IDs. For example, if a traffic
          definitions contains 20 flows with a first_stream_id value of
          1, then the definition will use 1-20 for stream ids.
        format: int32
      fill:
        type: object
        description: Specifies optional packet payload fill
        properties:
          constant:
            type: integer
            description: Constant, repeating fill value for payload
            format: int32
            minimum: 0
            maximum: 65535
          decrement:
            type: integer
            description: Decrement octet values for payload
            format: int32
            minimum: 0
            maximum: 255
          increment:
            type: integer
            description: Increment octet values for payload
            format: int32
            minimum: 0
            maximum: 255
          prbs:
            type: boolean
            description: Use pseudo random bit sequence for payload
      latency:
        type: string
        description: Indicates timestamp offset
        enum:
          - start_of_frame
          - end_of_frame
    required:
      - stream_id
      - latency

  TrafficDefinition:
    type: object
    description: Describes a sequence of traffic for a packet generator to transmit
    properties:
      packet:
        $ref: "#/definitions/TrafficPacketTemplate"
      length:
        $ref: "#/definitions/TrafficLength"
      signature:
        $ref: "#/definitions/SpirentSignature"
      weight:
        type: integer
        description: Relative weight of this packet definition
        format: int32
        minimum: 1
        default: 1
    required:
      - packet
      - length

  TrafficDuration:
    type: object
    description: |
      Describes how long a packet generator should transmit traffic once
      started. Only one property may be set.
    properties:
      continuous:
        type: boolean
        description: Indicates there is no duration limit when set.
      frames:
        type: integer
        description: Specifies the duration as number of transmitted frames.
        format: int32
        minimum: 1
      time:
        type: object
        description: Describes the transmit time
        properties:
          value:
            type: integer
            description: Specifies the value for time based transmission
            format: int32
            minimum: 1
          units:
            type: string
            description: Specifies the units for value
            enum:
              - hours
              - minutes
              - seconds
              - milliseconds
        required:
          - value
          - units

  TrafficLength:
    type: object
    description: |
      Specifies length of generated packets. At least one property must be set.
    properties:
      fixed:
        type: integer
        description: Fixed packet length
        format: int32
        minimum: 64
      list:
        type: array
        description: List of packet lengths
        items:
          type: integer
          format: int32
          minimum: 64
          minItems: 1
      sequence:
        type: object
        description: Specifies a sequence of packet lengths
        properties:
          count:
            type: integer
            description: The number of different packet lengths
            format: int32
            minimum: 1
          start:
            type: integer
            description: The first length in the sequence
            format: int32
            minimum: 64
          stop:
            type: integer
            description: The last length in the sequence
            format: int32
            minimum: 64
          skip:
            type: array
            description: List of lengths in the sequence to skip
            items:
              type: integer
              format: int32
              minimum: 64
        required:
          - count
          - start

  TrafficLoad:
    type: object
    description: Describes the transmit load of a packet generator
    properties:
      burst_size:
        type: integer
        description: |
          Tells the generator how many packets to transmit as part of an
          atomic transmit operation. Larger burst sizes are more efficient.
        format: int32
        default: 1
        minimum: 1
        maximum: 65535
      rate:
        type: object
        description: The transmit packet rate
        properties:
          period:
            type: string
            description: unit of time for the rate
            enum:
              - second
              - minute
              - hour
          value:
            type: integer
            description: number of packets per period
            format: int64
            minimum: 1
        required:
          - period
          - value
      units:
        type: string
        description: The transmit units for the packet generator
        enum:
          - frames
          - octets
    required:
      - rate
      - units

  TrafficPacketTemplate:
    type: object
    description: Defines a set of packets for the packet generator
    properties:
      protocols:
        type: array
        description: |
          Ordered list of packet protocols. Packets are constructed
          by iterating over the sequence of protocols.
        items:
          $ref: "#/definitions/TrafficProtocol"
        minItems: 1
      modifier_tie:
        type: string
        description: |
          Specifies how modifiers from different protocols are combined in the
          packet template
        default: zip
        enum:
          - cartesian
          - zip
    required:
      - protocols

  TrafficProtocol:
    type: object
    description: |
      A traffic protocol definition for a traffic generator. At least one
      packet protocol must be set.
    properties:
      modifiers:
        type: object
        description: Specifies how to modify fields of the template
        properties:
          items:
            type: array
            description: List of traffic protocol modifiers
            items:
              $ref: "#/definitions/TrafficProtocolModifier"
            minItems: 1
          tie:
            type: string
            description: |
              Specifies how modifier tuples are generated when multiple
              modifiers are listed.
            default: zip
            enum:
              - cartesian
              - zip
        required:
          - items
      custom:
        $ref: ./common.yaml#/definitions/PacketProtocolCustom
      ethernet:
        $ref: ./protocol.yaml#/definitions/PacketProtocolEthernet
      ipv4:
        $ref: ./protocol.yaml#/definitions/PacketProtocolIpv4
      ipv6:
        $ref: ./protocol.yaml#/definitions/PacketProtocolIpv6
      mpls:
        $ref: ./protocol.yaml#/definitions/PacketProtocolMpls
      tcp:
        $ref: ./protocol.yaml#/definitions/PacketProtocolTcp
      udp:
        $ref: ./protocol.yaml#/definitions/PacketProtocolUdp
      vlan:
        $ref: ./protocol.yaml#/definitions/PacketProtocolVlan

  TrafficProtocolModifier:
    type: object
    description: Specifies how to modify protocol data
    properties:
      name:
        type: string
        description: |
          Packet protocol field to modify. Context determines what field
          names are valid and what data is expected in the modifier.
      permute:
        type: boolean
        description: |
          Specifies whether to pseudo-randomly order the modifier values
      field:
        $ref: "#/definitions/TrafficProtocolFieldModifier"
      ipv4:
        $ref: "#/definitions/TrafficProtocolIpv4Modifier"
      ipv6:
        $ref: "#/definitions/TrafficProtocolIpv6Modifier"
      mac:
        $ref: "#/definitions/TrafficProtocolMacModifier"
    required:
      - name
      - permute

  # XXX: The swagger/pistache code generator creates unbuildable code for
  # integer arrays with format = int64.  So, leave out the format here
  # for now.  Luckily, no non-address fields are larger than 32 bits.
  TrafficProtocolFieldModifier:
    type: object
    description: |
      Specifies how to modify a protocol data field. Maximum values are
      determined by the field to modify.
    properties:
      list:
        type: array
        description: |
          List of modifier values. Context determines what values are valid.
        items:
          type: integer
          minimum: 0
        minItems: 1
      sequence:
        type: object
        description: |
          Specifies a sequence of values. Context determines what values are
          valid.
        properties:
          count:
            type: integer
            description: The number of values in the sequence
            minimum: 1
          start:
            type: integer
            description: The first value in the sequence
            minimum: 0
          stop:
            type: integer
            description: The last value in the sequence
            minimum: 0
          skip:
            type: array
            description: List of values in the sequence to skip
            items:
              type: integer
              minimum: 0
        required:
          - count
          - start

  TrafficProtocolIpv4Modifier:
    type: object
    description: Specifies how to modify an IPv4 address
    properties:
      list:
        type: array
        description: List of IPv4 addresses
        items:
          type: string
          pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
        minItems: 1
      sequence:
        type: object
        description: Specifies a sequence of IPv4 addresses
        properties:
          count:
            type: integer
            description: The number of addresses in the sequence
            format: int32
            minimum: 1
          start:
            type: string
            description: First IPv4 address in the sequence
            pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
          stop:
            type: string
            description: Last IPv4 address in the sequence
            pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
          skip:
            type: array
            description: List of addresses in the sequence to skip
            items:
              type: string
              pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])\.){3}(25[0-5]|2[0-4][0-9]|[01]?[1-9]?[0-9])$
        required:
          - count
          - start

  TrafficProtocolIpv6Modifier:
    type: object
    description: Specifies how to modify an IPv6 address
    properties:
      list:
        type: array
        description: List of IPv6 addresses
        items:
          type: string
          pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
        minItems: 1
      sequence:
        type: object
        description: Specifies a sequence of IPv6 addresses
        properties:
          count:
            type: integer
            description: The number of addresses in the sequence
            format: int32
            minimum: 1
          start:
            type: string
            description: First IPv6 address in the sequence
            pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
          stop:
            type: string
            description: Last IPv6 address in the sequence
            pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
          skip:
            type: array
            description: List of addresses in the sequence to skip
            items:
              type: string
              pattern: ^((::[0-9a-fA-F]{1,4})|([0-9a-fA-F]{1,4}::)|(([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F])|(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}))$
        required:
          - count
          - start

  TrafficProtocolMacModifier:
    type: object
    description: Specifies how to modify an Ethernet MAC address
    properties:
      list:
        type: array
        description: List of MAC addresses
        items:
          type: string
          pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
        minItems: 1
      sequence:
        type: object
        description: Specifies a sequence of MAC addresses
        properties:
          count:
            type: integer
            description: The number of addresses in the sequence
            format: int32
            minimum: 1
          start:
            type: string
            description: The first MAC address in the sequence
            pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
          stop:
            type: string
            description: The last MAC address in the sequence
            pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
          skip:
            type: array
            description: List of addresses in the sequence to skip
            items:
              type: string
              pattern: ^([0-9a-fA-F]{1,2}(.|-|:)){5}[0-9a-fA-F]{1,2}$
        required:
          - count
          - start

  TxFlow:
    type: object
    description: A transmitted packet flow
    properties:
      id:
        type: string
        description: Unique transmit flow identifier
      generator_result_id:
        type: string
        description: Unique generator result identifier that recorded this flow
      stream_id:
        type: integer
        description: Spirent signature stream id
        format: int64
      counters:
        $ref: "#/definitions/PacketGeneratorFlowCounters"
    required:
      - id
      - generator_result_id
      - counters
