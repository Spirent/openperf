# coding: utf-8

"""
    OpenPerf API

    REST API interface for OpenPerf  # noqa: E501

    OpenAPI spec version: 1
    Contact: support@spirent.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PacketAnalyzerFlowCountersErrors(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'fcs': 'int',
        'ipv4_checksum': 'int',
        'tcp_checksum': 'int',
        'udp_checksum': 'int'
    }

    attribute_map = {
        'fcs': 'fcs',
        'ipv4_checksum': 'ipv4_checksum',
        'tcp_checksum': 'tcp_checksum',
        'udp_checksum': 'udp_checksum'
    }

    def __init__(self, fcs=None, ipv4_checksum=None, tcp_checksum=None, udp_checksum=None):  # noqa: E501
        """PacketAnalyzerFlowCountersErrors - a model defined in Swagger"""  # noqa: E501

        self._fcs = None
        self._ipv4_checksum = None
        self._tcp_checksum = None
        self._udp_checksum = None
        self.discriminator = None

        self.fcs = fcs
        self.ipv4_checksum = ipv4_checksum
        self.tcp_checksum = tcp_checksum
        self.udp_checksum = udp_checksum

    @property
    def fcs(self):
        """Gets the fcs of this PacketAnalyzerFlowCountersErrors.  # noqa: E501

        Number of Frame Check Sequence errors  # noqa: E501

        :return: The fcs of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :rtype: int
        """
        return self._fcs

    @fcs.setter
    def fcs(self, fcs):
        """Sets the fcs of this PacketAnalyzerFlowCountersErrors.

        Number of Frame Check Sequence errors  # noqa: E501

        :param fcs: The fcs of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :type: int
        """
        self._fcs = fcs

    @property
    def ipv4_checksum(self):
        """Gets the ipv4_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501

        Number of IPv4 checksum errors  # noqa: E501

        :return: The ipv4_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :rtype: int
        """
        return self._ipv4_checksum

    @ipv4_checksum.setter
    def ipv4_checksum(self, ipv4_checksum):
        """Sets the ipv4_checksum of this PacketAnalyzerFlowCountersErrors.

        Number of IPv4 checksum errors  # noqa: E501

        :param ipv4_checksum: The ipv4_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :type: int
        """
        self._ipv4_checksum = ipv4_checksum

    @property
    def tcp_checksum(self):
        """Gets the tcp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501

        Number of TCP checksum errors  # noqa: E501

        :return: The tcp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :rtype: int
        """
        return self._tcp_checksum

    @tcp_checksum.setter
    def tcp_checksum(self, tcp_checksum):
        """Sets the tcp_checksum of this PacketAnalyzerFlowCountersErrors.

        Number of TCP checksum errors  # noqa: E501

        :param tcp_checksum: The tcp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :type: int
        """
        self._tcp_checksum = tcp_checksum

    @property
    def udp_checksum(self):
        """Gets the udp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501

        Number of UDP checksum errors  # noqa: E501

        :return: The udp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :rtype: int
        """
        return self._udp_checksum

    @udp_checksum.setter
    def udp_checksum(self, udp_checksum):
        """Sets the udp_checksum of this PacketAnalyzerFlowCountersErrors.

        Number of UDP checksum errors  # noqa: E501

        :param udp_checksum: The udp_checksum of this PacketAnalyzerFlowCountersErrors.  # noqa: E501
        :type: int
        """
        self._udp_checksum = udp_checksum

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PacketAnalyzerFlowCountersErrors, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PacketAnalyzerFlowCountersErrors):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
